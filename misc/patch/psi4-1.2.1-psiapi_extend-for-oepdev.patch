diff -Naur psi4-1.2.1/CMakeLists.txt psi4-1.2.1-psiapi_extend-for-oepdev/CMakeLists.txt
--- psi4-1.2.1/CMakeLists.txt	2018-07-25 04:11:25.000000000 +0200
+++ psi4-1.2.1-psiapi_extend-for-oepdev/CMakeLists.txt	2020-07-15 12:43:57.223759454 +0200
@@ -84,7 +84,7 @@
 option(ENABLE_ambit "Enables the ambit tensor library" OFF)
 option(ENABLE_CheMPS2 "Enables CheMPS2 for DMRG (requires HDF5)" OFF)
 option(ENABLE_dkh "Enables DKH integrals (requires Fortran)" OFF)
-option(ENABLE_libefp "Enables LIBEFP for fragments" OFF)
+option(ENABLE_libefp "Enables LIBEFP for fragments" ON)
 option(ENABLE_erd "Enables use of ERD instead of Libint (requires Fortran)" OFF)
 option(ENABLE_simint "Enables use of SIMINT two-electron integral library" OFF)
 option(ENABLE_gdma "Enables Stone's GDMA multipole code (requires Fortran)" OFF)
diff -Naur psi4-1.2.1/psi4/driver/procrouting/proc.py psi4-1.2.1-psiapi_extend-for-oepdev/psi4/driver/procrouting/proc.py
--- psi4-1.2.1/psi4/driver/procrouting/proc.py	2018-07-25 04:11:25.000000000 +0200
+++ psi4-1.2.1-psiapi_extend-for-oepdev/psi4/driver/procrouting/proc.py	2020-07-15 12:43:56.995741148 +0200
@@ -2301,7 +2301,7 @@
         aux_basis = core.BasisSet.build(ref_wfn.molecule(), "DF_BASIS_CC",
                                             core.get_global_option("DF_BASIS_CC"),
                                             "RIFIT", core.get_global_option("BASIS"))
-        wfn.set_basisset("DF_BASIS_CC", aux_basis)
+        ref_wfn.set_basisset("DF_BASIS_CC", aux_basis)
 
     # Ensure IWL files have been written
     proc_util.check_iwl_file_from_scf_type(core.get_global_option('SCF_TYPE'), ref_wfn)
diff -Naur psi4-1.2.1/psi4/share/psi4/databases/A24_hcn_bb.py psi4-1.2.1-psiapi_extend-for-oepdev/psi4/share/psi4/databases/A24_hcn_bb.py
--- psi4-1.2.1/psi4/share/psi4/databases/A24_hcn_bb.py	1970-01-01 01:00:00.000000000 +0100
+++ psi4-1.2.1-psiapi_extend-for-oepdev/psi4/share/psi4/databases/A24_hcn_bb.py	2020-07-15 12:43:57.043745000 +0200
@@ -0,0 +1,650 @@
+#
+# @BEGIN LICENSE
+#
+# Psi4: an open-source quantum chemistry software package
+#
+# Copyright (c) 2007-2018 The Psi4 Developers.
+#
+# The copyrights for code used from other parties are included in
+# the corresponding files.
+#
+# This file is part of Psi4.
+#
+# Psi4 is free software; you can redistribute it and/or modify
+# it under the terms of the GNU Lesser General Public License as published by
+# the Free Software Foundation, version 3.
+#
+# Psi4 is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU Lesser General Public License for more details.
+#
+# You should have received a copy of the GNU Lesser General Public License along
+# with Psi4; if not, write to the Free Software Foundation, Inc.,
+# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
+#
+# @END LICENSE
+#
+
+"""
+| Database (Hobza) of interaction energies for bimolecular complexes.
+| Geometries from <Reference>.
+| Reference interaction energies from Rezac and Hobza, JCTC (in press).
+
+
+- **cp**  ``'off'`` <erase this comment and after unless on is a valid option> || ``'on'``
+
+- **rlxd** ``'off'`` <erase this comment and after unless on is valid option> || ``'on'``
+
+
+- **benchmark**
+
+  - ``'<benchmark_name>'`` <Reference>.
+  - |dl| ``'<default_benchmark_name>'`` |dr| <Reference>.
+
+- **subset**
+
+  - ``'small'`` <members_description>
+  - ``'large'`` <members_description>
+  - ``'<subset>'`` <members_description>
+
+"""
+import re
+import qcdb
+
+# <<< A24 Database Module >>>
+dbse = 'A24'
+
+# <<< Database Members >>>
+HRXN = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24]
+HRXN_SM = []
+HRXN_LG = []
+
+# <<< Chemical Systems Involved >>>
+RXNM = {}     # reaction matrix of reagent contributions per reaction
+ACTV = {}     # order of active reagents per reaction
+ACTV_CP = {}  # order of active reagents per counterpoise-corrected reaction
+ACTV_SA = {}  # order of active reagents for non-supermolecular calculations
+for rxn in HRXN:
+
+    RXNM[   '%s-%s' % (dbse, rxn)] = {'%s-%s-dimer'      % (dbse, rxn) : +1,
+                                      '%s-%s-monoA-CP'   % (dbse, rxn) : -1,
+                                      '%s-%s-monoB-CP'   % (dbse, rxn) : -1,
+                                      '%s-%s-monoA-unCP' % (dbse, rxn) : -1,
+                                      '%s-%s-monoB-unCP' % (dbse, rxn) : -1 }
+
+    ACTV_SA['%s-%s' % (dbse, rxn)] = ['%s-%s-dimer'      % (dbse, rxn) ]
+
+    ACTV_CP['%s-%s' % (dbse, rxn)] = ['%s-%s-dimer'      % (dbse, rxn),
+                                      '%s-%s-monoA-CP'   % (dbse, rxn),
+                                      '%s-%s-monoB-CP'   % (dbse, rxn) ]
+
+    ACTV[   '%s-%s' % (dbse, rxn)] = ['%s-%s-dimer'      % (dbse, rxn),
+                                      '%s-%s-monoA-unCP' % (dbse, rxn),
+                                      '%s-%s-monoB-unCP' % (dbse, rxn) ]
+
+# <<< Reference Values [kcal/mol] from Rezac and Hobza dx.doi.org/10.1021/ct400057w >>>
+BIND = {}
+BIND['%s-%s'            % (dbse, 1  )] =    -6.524
+BIND['%s-%s'            % (dbse, 2  )] =    -5.014
+BIND['%s-%s'            % (dbse, 3  )] =    -4.749
+BIND['%s-%s'            % (dbse, 4  )] =    -4.572
+BIND['%s-%s'            % (dbse, 5  )] =    -3.157
+BIND['%s-%s'            % (dbse, 6  )] =    -1.679
+BIND['%s-%s'            % (dbse, 7  )] =    -0.779
+BIND['%s-%s'            % (dbse, 8  )] =    -0.672
+BIND['%s-%s'            % (dbse, 9  )] =    -4.474
+BIND['%s-%s'            % (dbse, 10 )] =    -2.578
+BIND['%s-%s'            % (dbse, 11 )] =    -1.629
+BIND['%s-%s'            % (dbse, 12 )] =    -1.537
+BIND['%s-%s'            % (dbse, 13 )] =    -1.389
+BIND['%s-%s'            % (dbse, 14 )] =    -1.110
+BIND['%s-%s'            % (dbse, 15 )] =    -0.514
+BIND['%s-%s'            % (dbse, 16 )] =    -1.518
+BIND['%s-%s'            % (dbse, 17 )] =    -0.837
+BIND['%s-%s'            % (dbse, 18 )] =    -0.615
+BIND['%s-%s'            % (dbse, 19 )] =    -0.538
+BIND['%s-%s'            % (dbse, 20 )] =    -0.408
+BIND['%s-%s'            % (dbse, 21 )] =    -0.370
+BIND['%s-%s'            % (dbse, 22 )] =    0.784
+BIND['%s-%s'            % (dbse, 23 )] =    0.897
+BIND['%s-%s'            % (dbse, 24 )] =    1.075
+
+
+# <<< Comment Lines >>>
+TAGL = {}
+TAGL['%s-%s'            % (dbse, 1)] = """ water_ammonia_Cs """
+TAGL['%s-%s-dimer'      % (dbse, 1)] = """Dimer from water_ammonia_Cs """
+TAGL['%s-%s-monoA-CP'   % (dbse, 1)] = """Monomer A water_ammonia_Cs  """
+TAGL['%s-%s-monoB-CP'   % (dbse, 1)] = """Monomer B water_ammonia_Cs  """
+TAGL['%s-%s-monoA-unCP' % (dbse, 1)] = """Monomer A water_ammonia_Cs  """
+TAGL['%s-%s-monoB-unCP' % (dbse, 1)] = """Monomer B water_ammonia_Cs  """
+TAGL['%s-%s'            % (dbse, 2)] = """ water_water_Cs """
+TAGL['%s-%s-dimer'      % (dbse, 2)] = """Dimer from water_water_Cs """
+TAGL['%s-%s-monoA-CP'   % (dbse, 2)] = """Monomer A from water_water_Cs """
+TAGL['%s-%s-monoB-CP'   % (dbse, 2)] = """Monomer B from water_water_Cs """
+TAGL['%s-%s-monoA-unCP' % (dbse, 2)] = """Monomer A from water_water_Cs """
+TAGL['%s-%s-monoB-unCP' % (dbse, 2)] = """Monomer B from water_water_Cs """
+TAGL['%s-%s'            % (dbse, 3)] = """ HCN_HCN_Cxv """
+TAGL['%s-%s-dimer'      % (dbse, 3)] = """Dimer from HCN_HCN_Cxv """
+TAGL['%s-%s-monoA-CP'   % (dbse, 3)] = """Monomer A from HCN_HCN_Cxv """
+TAGL['%s-%s-monoB-CP'   % (dbse, 3)] = """Monomer B from HCN_HCN_Cxv """
+TAGL['%s-%s-monoA-unCP' % (dbse, 3)] = """Monomer A from HCN_HCN_Cxv """
+TAGL['%s-%s-monoB-unCP' % (dbse, 3)] = """Monomer B from HCN_HCN_Cxv """
+TAGL['%s-%s'            % (dbse, 4)] = """ HF_HF_Cs """
+TAGL['%s-%s-dimer'      % (dbse, 4)] = """Dimer from HF_HF_Cs  """
+TAGL['%s-%s-monoA-CP'   % (dbse, 4)] = """Monomer A from HF_HF_Cs """
+TAGL['%s-%s-monoB-CP'   % (dbse, 4)] = """Monomer B from HF_HF_Cs """
+TAGL['%s-%s-monoA-unCP' % (dbse, 4)] = """Monomer A from HF_HF_Cs """
+TAGL['%s-%s-monoB-unCP' % (dbse, 4)] = """Monomer B from HF_HF_Cs """
+TAGL['%s-%s'            % (dbse, 5)] = """ ammonia_ammonia_C2h """
+TAGL['%s-%s-dimer'      % (dbse, 5)] = """Dimer from ammonia_ammonia_C2h """
+TAGL['%s-%s-monoA-CP'   % (dbse, 5)] = """Monomer A from ammonia_ammonia_C2h """
+TAGL['%s-%s-monoB-CP'   % (dbse, 5)] = """Monomer B from ammonia_ammonia_C2h """
+TAGL['%s-%s-monoA-unCP' % (dbse, 5)] = """Monomer A from ammonia_ammonia_C2h """
+TAGL['%s-%s-monoB-unCP' % (dbse, 5)] = """Monomer B from ammonia_ammonia_C2h """
+TAGL['%s-%s'            % (dbse, 6)] = """ methane_HF_C3v """
+TAGL['%s-%s-dimer'      % (dbse, 6)] = """Dimer from methane_HF_C3v """
+TAGL['%s-%s-monoA-CP'   % (dbse, 6)] = """Monomer A from methane_HF_C3v """
+TAGL['%s-%s-monoB-CP'   % (dbse, 6)] = """Monomer B from methane_HF_C3v """
+TAGL['%s-%s-monoA-unCP' % (dbse, 6)] = """Monomer A from methane_HF_C3v """
+TAGL['%s-%s-monoB-unCP' % (dbse, 6)] = """Monomer B from methane_HF_C3v """
+TAGL['%s-%s'            % (dbse, 7)] = """ ammmonia_methane_C3v """
+TAGL['%s-%s-dimer'      % (dbse, 7)] = """Dimer from ammmonia_methane_C3v """
+TAGL['%s-%s-monoA-CP'   % (dbse, 7)] = """Monomer A from ammmonia_methane_C3v """
+TAGL['%s-%s-monoB-CP'   % (dbse, 7)] = """Monomer B from ammmonia_methane_C3v """
+TAGL['%s-%s-monoA-unCP' % (dbse, 7)] = """Monomer A from ammmonia_methane_C3v """
+TAGL['%s-%s-monoB-unCP' % (dbse, 7)] = """Monomer B from ammmonia_methane_C3v """
+TAGL['%s-%s'            % (dbse, 8)] = """ methane_water_Cs """
+TAGL['%s-%s-dimer'      % (dbse, 8)] = """Dimer from methane_water_Cs """
+TAGL['%s-%s-monoA-CP'   % (dbse, 8)] = """Monomer A from methane_water_Cs """
+TAGL['%s-%s-monoB-CP'   % (dbse, 8)] = """Monomer B from methane_water_Cs """
+TAGL['%s-%s-monoA-unCP' % (dbse, 8)] = """Monomer A from methane_water_Cs """
+TAGL['%s-%s-monoB-unCP' % (dbse, 8)] = """Monomer B from methane_water_Cs """
+TAGL['%s-%s'            % (dbse, 9)] = """ formaldehyde_formaldehyde_Cs """
+TAGL['%s-%s-dimer'      % (dbse, 9)] = """Dimer from formaldehyde_formaldehyde_Cs """
+TAGL['%s-%s-monoA-CP'   % (dbse, 9)] = """Monomer A from formaldehyde_formaldehyde_Cs """
+TAGL['%s-%s-monoB-CP'   % (dbse, 9)] = """Monomer B from formaldehyde_formaldehyde_Cs """
+TAGL['%s-%s-monoA-unCP' % (dbse, 9)] = """Monomer A from formaldehyde_formaldehyde_Cs """
+TAGL['%s-%s-monoB-unCP' % (dbse, 9)] = """Monomer B from formaldehyde_formaldehyde_Cs """
+TAGL['%s-%s'            % (dbse, 10)] = """ ethene_wat_Cs """
+TAGL['%s-%s-dimer'      % (dbse, 10)] = """Dimer from ethene_wat_Cs """
+TAGL['%s-%s-monoA-CP'   % (dbse, 10)] = """Monomer A from ethene_wat_Cs """
+TAGL['%s-%s-monoB-CP'   % (dbse, 10)] = """Monomer B from ethene_wat_Cs """
+TAGL['%s-%s-monoA-unCP' % (dbse, 10)] = """Monomer A from ethene_wat_Cs """
+TAGL['%s-%s-monoB-unCP' % (dbse, 10)] = """Monomer B from ethene_wat_Cs """
+TAGL['%s-%s'            % (dbse, 11)] = """ ethene_formaldehyde_Cs """
+TAGL['%s-%s-dimer'      % (dbse, 11)] = """Dimer from ethene_formaldehyde_Cs """
+TAGL['%s-%s-monoA-CP'   % (dbse, 11)] = """Monomer A from ethene_formaldehyde_Cs """
+TAGL['%s-%s-monoB-CP'   % (dbse, 11)] = """Monomer B from ethene_formaldehyde_Cs """
+TAGL['%s-%s-monoA-unCP' % (dbse, 11)] = """Monomer A from ethene_formaldehyde_Cs """
+TAGL['%s-%s-monoB-unCP' % (dbse, 11)] = """Monomer B from ethene_formaldehyde_Cs """
+TAGL['%s-%s'            % (dbse, 12)] = """ ethyne_ethyne_C2v """
+TAGL['%s-%s-dimer'      % (dbse, 12)] = """Dimer from ethyne_ethyne_C2v """
+TAGL['%s-%s-monoA-CP'   % (dbse, 12)] = """Monomer A from ethyne_ethyne_C2v """
+TAGL['%s-%s-monoB-CP'   % (dbse, 12)] = """Monomer B from ethyne_ethyne_C2v """
+TAGL['%s-%s-monoA-unCP' % (dbse, 12)] = """Monomer A from ethyne_ethyne_C2v """
+TAGL['%s-%s-monoB-unCP' % (dbse, 12)] = """Monomer B from ethyne_ethyne_C2v """
+TAGL['%s-%s'            % (dbse, 13)] = """ ethene_ammonia_Cs """
+TAGL['%s-%s-dimer'      % (dbse, 13)] = """Dimer from ethene_ammonia_Cs """
+TAGL['%s-%s-monoA-CP'   % (dbse, 13)] = """Monomer A from ethene_ammonia_Cs """
+TAGL['%s-%s-monoB-CP'   % (dbse, 13)] = """Monomer B from ethene_ammonia_Cs """
+TAGL['%s-%s-monoA-unCP' % (dbse, 13)] = """Monomer A from ethene_ammonia_Cs """
+TAGL['%s-%s-monoB-unCP' % (dbse, 13)] = """Monomer B from ethene_ammonia_Cs """
+TAGL['%s-%s'            % (dbse, 14)] = """ ethene_ethene_C2v """
+TAGL['%s-%s-dimer'      % (dbse, 14)] = """Dimer from ethene_ethene_C2v """
+TAGL['%s-%s-monoA-CP'   % (dbse, 14)] = """Monomer A from ethene_ethene_C2v """
+TAGL['%s-%s-monoB-CP'   % (dbse, 14)] = """Monomer B from ethene_ethene_C2v """
+TAGL['%s-%s-monoA-unCP' % (dbse, 14)] = """Monomer A from ethene_ethene_C2v """
+TAGL['%s-%s-monoB-unCP' % (dbse, 14)] = """Monomer B from ethene_ethene_C2v """
+TAGL['%s-%s'            % (dbse, 15)] = """ methane_ethene_Cs """
+TAGL['%s-%s-dimer'      % (dbse, 15)] = """Dimer from methane_ethene_Cs """
+TAGL['%s-%s-monoA-CP'   % (dbse, 15)] = """Monomer A from methane_ethene_Cs """
+TAGL['%s-%s-monoB-CP'   % (dbse, 15)] = """Monomer B from methane_ethene_Cs """
+TAGL['%s-%s-monoA-unCP' % (dbse, 15)] = """Monomer A from methane_ethene_Cs """
+TAGL['%s-%s-monoB-unCP' % (dbse, 15)] = """Monomer B from methane_ethene_Cs """
+TAGL['%s-%s'            % (dbse, 16)] = """ borane_methane_Cs """
+TAGL['%s-%s-dimer'      % (dbse, 16)] = """Dimer from borane_methane_Cs """
+TAGL['%s-%s-monoA-CP'   % (dbse, 16)] = """Monomer A from borane_methane_Cs """
+TAGL['%s-%s-monoB-CP'   % (dbse, 16)] = """Monomer B from borane_methane_Cs """
+TAGL['%s-%s-monoA-unCP' % (dbse, 16)] = """Monomer A from borane_methane_Cs """
+TAGL['%s-%s-monoB-unCP' % (dbse, 16)] = """Monomer B from borane_methane_Cs """
+TAGL['%s-%s'            % (dbse, 17)] = """ methane_ethane_Cs """
+TAGL['%s-%s-dimer'      % (dbse, 17)] = """Dimer from methane_ethane_Cs """
+TAGL['%s-%s-monoA-CP'   % (dbse, 17)] = """Monomer A from methane_ethane_Cs """
+TAGL['%s-%s-monoB-CP'   % (dbse, 17)] = """Monomer B from methane_ethane_Cs """
+TAGL['%s-%s-monoA-unCP' % (dbse, 17)] = """Monomer A from methane_ethane_Cs """
+TAGL['%s-%s-monoB-unCP' % (dbse, 17)] = """Monomer B from methane_ethane_Cs """
+TAGL['%s-%s'            % (dbse, 18)] = """ methane_ethane_C3 """
+TAGL['%s-%s-dimer'      % (dbse, 18)] = """Dimer from methane_ethane_C3 """
+TAGL['%s-%s-monoA-CP'   % (dbse, 18)] = """Monomer A from methane_ethane_C3 """
+TAGL['%s-%s-monoB-CP'   % (dbse, 18)] = """Monomer B from methane_ethane_C3 """
+TAGL['%s-%s-monoA-unCP' % (dbse, 18)] = """Monomer A from methane_ethane_C3 """
+TAGL['%s-%s-monoB-unCP' % (dbse, 18)] = """Monomer B from methane_ethane_C3 """
+TAGL['%s-%s'            % (dbse, 19)] = """ methane_methane_D3d """
+TAGL['%s-%s-dimer'      % (dbse, 19)] = """Dimer from methane_methane_D3d """
+TAGL['%s-%s-monoA-CP'   % (dbse, 19)] = """Monomer A from methane_methane_D3d """
+TAGL['%s-%s-monoB-CP'   % (dbse, 19)] = """Monomer B from methane_methane_D3d """
+TAGL['%s-%s-monoA-unCP' % (dbse, 19)] = """Monomer A from methane_methane_D3d """
+TAGL['%s-%s-monoB-unCP' % (dbse, 19)] = """Monomer B from methane_methane_D3d """
+TAGL['%s-%s'            % (dbse, 20)] = """ methane_Ar_C3v """
+TAGL['%s-%s-dimer'      % (dbse, 20)] = """Dimer from methane_Ar_C3v """
+TAGL['%s-%s-monoA-CP'   % (dbse, 20)] = """Monomer A from methane_Ar_C3v """
+TAGL['%s-%s-monoB-CP'   % (dbse, 20)] = """Monomer B from methane_Ar_C3v """
+TAGL['%s-%s-monoA-unCP' % (dbse, 20)] = """Monomer A from methane_Ar_C3v """
+TAGL['%s-%s-monoB-unCP' % (dbse, 20)] = """Monomer B from methane_Ar_C3v """
+TAGL['%s-%s'            % (dbse, 21)] = """ ethene_Ar_C2v """
+TAGL['%s-%s-dimer'      % (dbse, 21)] = """Dimer from ethene_Ar_C2v """
+TAGL['%s-%s-monoA-CP'   % (dbse, 21)] = """Monomer A from ethene_Ar_C2v """
+TAGL['%s-%s-monoB-CP'   % (dbse, 21)] = """Monomer B from ethene_Ar_C2v """
+TAGL['%s-%s-monoA-unCP' % (dbse, 21)] = """Monomer A from ethene_Ar_C2v """
+TAGL['%s-%s-monoB-unCP' % (dbse, 21)] = """Monomer B from ethene_Ar_C2v """
+TAGL['%s-%s'            % (dbse, 22)] = """ ethene_ethyne_C2v """
+TAGL['%s-%s-dimer'      % (dbse, 22)] = """Dimer from ethene_ethyne_C2v """
+TAGL['%s-%s-monoA-CP'   % (dbse, 22)] = """Monomer A from ethene_ethyne_C2v """
+TAGL['%s-%s-monoB-CP'   % (dbse, 22)] = """Monomer B from ethene_ethyne_C2v """
+TAGL['%s-%s-monoA-unCP' % (dbse, 22)] = """Monomer A from ethene_ethyne_C2v """
+TAGL['%s-%s-monoB-unCP' % (dbse, 22)] = """Monomer B from ethene_ethyne_C2v """
+TAGL['%s-%s'            % (dbse, 23)] = """ ethene_ethene_D2h """
+TAGL['%s-%s-dimer'      % (dbse, 23)] = """Dimer from ethene_ethene_D2h """
+TAGL['%s-%s-monoA-CP'   % (dbse, 23)] = """Monomer A from ethene_ethene_D2h """
+TAGL['%s-%s-monoB-CP'   % (dbse, 23)] = """Monomer B from ethene_ethene_D2h """
+TAGL['%s-%s-monoA-unCP' % (dbse, 23)] = """Monomer A from ethene_ethene_D2h """
+TAGL['%s-%s-monoB-unCP' % (dbse, 23)] = """Monomer B from ethene_ethene_D2h """
+TAGL['%s-%s'            % (dbse, 24)] = """ ethyne_ethyne_D2h """
+TAGL['%s-%s-dimer'      % (dbse, 24)] = """Dimer from ethyne_ethyne_D2h """
+TAGL['%s-%s-monoA-CP'   % (dbse, 24)] = """Monomer A from ethyne_ethyne_D2h """
+TAGL['%s-%s-monoB-CP'   % (dbse, 24)] = """Monomer B from ethyne_ethyne_D2h """
+TAGL['%s-%s-monoA-unCP' % (dbse, 24)] = """Monomer A from ethyne_ethyne_D2h """
+TAGL['%s-%s-monoB-unCP' % (dbse, 24)] = """Monomer B from ethyne_ethyne_D2h """
+
+# <<< Geometry Specification Strings >>>
+GEOS = {}
+
+GEOS['%s-%s-dimer' % (dbse, '1')] = qcdb.Molecule("""
+0 1
+O          0.00000000      -0.05786571      -1.47979303
+H          0.00000000       0.82293384      -1.85541474
+H          0.00000000       0.07949567      -0.51934253
+--
+0 1
+N          0.00000000       0.01436394       1.46454628
+H          0.00000000      -0.98104857       1.65344779
+H         -0.81348351       0.39876776       1.92934049
+H          0.81348351       0.39876776       1.92934049
+units angstrom
+""")
+
+GEOS['%s-%s-dimer' % (dbse, '2')] = qcdb.Molecule("""
+0 1
+O         -0.06699914       0.00000000       1.49435474
+H          0.81573427       0.00000000       1.86586639
+H          0.06885510       0.00000000       0.53914277
+--
+0 1
+O          0.06254775       0.00000000      -1.42263208
+H         -0.40696540      -0.76017841      -1.77174450
+H         -0.40696540       0.76017841      -1.77174450
+units angstrom
+""")
+
+# HCN dimer was rotated in space because of symmetry problem. Structure is identical as in original database A24.py
+GEOS['%s-%s-dimer' % (dbse, '3')] = qcdb.Molecule("""
+0 1
+H        2.71979       -3.72263        1.46360 
+C        2.04705       -2.94225        1.74745 
+N        1.32000       -2.09886        2.05421 
+--
+0 1
+H       -0.08078       -0.47394        2.64524
+C       -0.75706        0.31054        2.93058
+N       -1.48547        1.15550        3.23791
+units angstrom
+""")
+
+GEOS['%s-%s-dimer' % (dbse, '4')] = qcdb.Molecule("""
+0 1
+H          0.00000000       0.80267982       1.69529329
+F          0.00000000      -0.04596666       1.34034818
+--
+0 1
+H          0.00000000      -0.12040787      -0.49082840
+F          0.00000000       0.00976945      -1.40424978
+units angstrom
+""")
+
+GEOS['%s-%s-dimer' % (dbse, '5')] = qcdb.Molecule("""
+0 1
+N         -0.04998129      -1.58709323       0.00000000
+H          0.12296265      -2.16846018       0.81105976
+H          0.12296265      -2.16846018      -0.81105976
+H          0.65988580      -0.86235298       0.00000000
+--
+0 1
+N          0.04998129       1.58709323       0.00000000
+H         -0.12296265       2.16846018       0.81105976
+H         -0.65988580       0.86235298       0.00000000
+H         -0.12296265       2.16846018      -0.81105976
+units angstrom
+""")
+
+GEOS['%s-%s-dimer' % (dbse, '6')] = qcdb.Molecule("""
+0 1
+C          0.00000000      -0.00000000       1.77071609
+H          0.51593378      -0.89362352       1.42025061
+H         -0.00000000       0.00000000       2.85805859
+H          0.51593378       0.89362352       1.42025061
+H         -1.03186756       0.00000000       1.42025061
+--
+0 1
+H         -0.00000000       0.00000000      -0.54877328
+F         -0.00000000       0.00000000      -1.46803256
+units angstrom
+""")
+
+GEOS['%s-%s-dimer' % (dbse, '7')] = qcdb.Molecule("""
+0 1
+N         -0.00000000       0.00000000       1.84833659
+H          0.93730979      -0.00000000       2.23206741
+H         -0.46865489      -0.81173409       2.23206741
+H         -0.46865489       0.81173409       2.23206741
+--
+0 1
+H          0.00000000      -0.00000000      -0.94497174
+C          0.00000000      -0.00000000      -2.03363752
+H          0.51251439       0.88770096      -2.40095125
+H          0.51251439      -0.88770096      -2.40095125
+H         -1.02502878       0.00000000      -2.40095125
+units angstrom
+""")
+
+GEOS['%s-%s-dimer' % (dbse, '8')] = qcdb.Molecule("""
+0 1
+C          0.00069016       0.00000000      -1.99985520
+H         -0.50741740       0.88759452      -2.37290605
+H          1.03052749       0.00000000      -2.35282982
+H         -0.01314396       0.00000000      -0.91190852
+H         -0.50741740      -0.88759452      -2.37290605
+--
+0 1
+O         -0.00472553       0.00000000       1.71597466
+H          0.03211863       0.75755459       2.30172044
+H          0.03211863      -0.75755459       2.30172044
+units angstrom
+""")
+
+GEOS['%s-%s-dimer' % (dbse, '9')] = qcdb.Molecule("""
+0 1
+C          0.00000000       0.60123980      -1.35383976
+O          0.00000000      -0.59301814      -1.55209021
+H          0.93542250       1.17427624      -1.26515132
+H         -0.93542250       1.17427624      -1.26515132
+--
+0 1
+C          0.00000000      -0.60200476       1.55228866
+O          0.00000000       0.59238638       1.35511328
+H          0.00000000      -1.00937982       2.57524635
+H          0.00000000      -1.32002906       0.71694997
+units angstrom
+""")
+
+GEOS['%s-%s-dimer' % (dbse, '10')] = qcdb.Molecule("""
+0 1
+C          0.01058825      -0.66806246       1.29820809
+C          0.01058825       0.66806246       1.29820809
+H          0.86863216       1.23267933       0.95426815
+H         -0.84608285       1.23258495       1.64525385
+H         -0.84608285      -1.23258495       1.64525385
+H          0.86863216      -1.23267933       0.95426815
+--
+0 1
+H         -0.79685627       0.00000000      -2.50911038
+O          0.04347445       0.00000000      -2.04834054
+H         -0.19067546       0.00000000      -1.11576944
+units angstrom
+""")
+
+GEOS['%s-%s-dimer' % (dbse, '11')] = qcdb.Molecule("""
+0 1
+C          0.00000000      -0.59797089       1.47742864
+C          0.00000000       0.42131196       2.33957848
+H          0.92113351      -1.02957102       1.10653516
+H         -0.92113351      -1.02957102       1.10653516
+H         -0.92393815       0.85124826       2.70694633
+H          0.92393815       0.85124826       2.70694633
+--
+0 1
+O          0.00000000      -0.51877334      -1.82845679
+C          0.00000000       0.68616220      -1.73709412
+H          0.00000000       1.33077474      -2.63186355
+H          0.00000000       1.18902807      -0.75645498
+units angstrom
+""")
+
+GEOS['%s-%s-dimer' % (dbse, '12')] = qcdb.Molecule("""
+0 1
+C          0.00000000       0.60356400      -2.18173438
+H          0.00000000       1.66847581      -2.18429610
+C          0.00000000      -0.60356400      -2.18173438
+H          0.00000000      -1.66847581      -2.18429610
+--
+0 1
+C         -0.00000000       0.00000000       1.57829513
+H         -0.00000000       0.00000000       0.51136193
+C         -0.00000000       0.00000000       2.78576543
+H         -0.00000000       0.00000000       3.85017859
+units angstrom
+""")
+
+GEOS['%s-%s-dimer' % (dbse, '13')] = qcdb.Molecule("""
+0 1
+C          0.00000000      -0.59662248       1.58722206
+C          0.00000000       0.68258238       1.20494642
+H          0.92312147       1.22423658       1.04062463
+H         -0.92312147       1.22423658       1.04062463
+H         -0.92388993      -1.13738548       1.75121281
+H          0.92388993      -1.13738548       1.75121281
+--
+0 1
+N          0.00000000      -0.00401379      -2.31096701
+H         -0.81122549      -0.45983060      -2.71043881
+H          0.00000000      -0.22249432      -1.32128161
+H          0.81122549      -0.45983060      -2.71043881
+units angstrom
+""")
+
+GEOS['%s-%s-dimer' % (dbse, '14')] = qcdb.Molecule("""
+0 1
+H          0.92444510      -1.23172221      -1.90619313
+H         -0.92444510      -1.23172221      -1.90619313
+H         -0.92444510       1.23172221      -1.90619313
+H          0.92444510       1.23172221      -1.90619313
+C          0.00000000       0.66728778      -1.90556520
+C          0.00000000      -0.66728778      -1.90556520
+--
+0 1
+H         -0.00000000       1.23344948       2.82931792
+H          0.00000000       1.22547148       0.97776199
+H         -0.00000000      -1.22547148       0.97776199
+H         -0.00000000      -1.23344948       2.82931792
+C         -0.00000000      -0.66711698       1.90601042
+C         -0.00000000       0.66711698       1.90601042
+units angstrom
+""")
+
+GEOS['%s-%s-dimer' % (dbse, '15')] = qcdb.Molecule("""
+0 1
+C          0.00000000       0.64634385      -1.60849815
+C          0.00000000      -0.67914355      -1.45381675
+H         -0.92399961      -1.24016223      -1.38784883
+H          0.92399961      -1.24016223      -1.38784883
+H          0.92403607       1.20737602      -1.67357285
+H         -0.92403607       1.20737602      -1.67357285
+--
+0 1
+H          0.00000000       0.08295411       1.59016711
+C          0.00000000       0.02871509       2.67711785
+H          0.88825459       0.52261990       3.06664029
+H         -0.88825459       0.52261990       3.06664029
+H          0.00000000      -1.01394800       2.98955227
+units angstrom
+""")
+
+GEOS['%s-%s-dimer' % (dbse, '16')] = qcdb.Molecule("""
+0 1
+C          0.00346000       0.00000000       1.38045208
+H          0.84849635       0.00000000       0.68958651
+H          0.39513333       0.00000000       2.39584935
+H         -0.60268447      -0.88994299       1.22482674
+H         -0.60268447       0.88994299       1.22482674
+--
+0 1
+B         -0.00555317       0.00000000      -1.59887976
+H          0.58455128      -1.03051800      -1.67949525
+H          0.58455128       1.03051800      -1.67949525
+H         -1.18903148       0.00000000      -1.47677217
+units angstrom
+""")
+
+GEOS['%s-%s-dimer' % (dbse, '17')] = qcdb.Molecule("""
+0 1
+C          0.00000000      -0.06374421       2.42054090
+H          0.00000000       1.02169396       2.34238038
+H          0.88828307      -0.46131911       1.93307194
+H         -0.88828307      -0.46131911       1.93307194
+H          0.00000000      -0.35363606       3.46945195
+--
+0 1
+C          0.00000000       0.78133572      -1.13543912
+H          0.00000000       1.37465349      -2.05114442
+H         -0.88043002       1.06310554      -0.55580918
+C          0.00000000      -0.71332890      -1.44723686
+H          0.88043002       1.06310554      -0.55580918
+H          0.00000000      -1.30641812      -0.53140693
+H         -0.88100343      -0.99533072      -2.02587154
+H          0.88100343      -0.99533072      -2.02587154
+units angstrom
+""")
+
+GEOS['%s-%s-dimer' % (dbse, '18')] = qcdb.Molecule("""
+0 1
+C         -0.00000000       0.00000000      -2.85810471
+H          0.39304720      -0.94712229      -2.49369739
+H          0.62370837       0.81395000      -2.49369739
+H         -1.01675556       0.13317229      -2.49369739
+H          0.00000000      -0.00000000      -3.94634214
+--
+0 1
+C          0.00000000      -0.00000000       0.76143405
+C         -0.00000000      -0.00000000       2.28821715
+H         -0.61711193      -0.80824397       0.36571527
+H         -0.39140385       0.93855659       0.36571527
+H          1.00851577      -0.13031262       0.36571527
+H         -1.00891703       0.13031295       2.68258296
+H          0.39160418      -0.93890425       2.68258296
+H          0.61731284       0.80859130       2.68258296
+units angstrom
+""")
+
+GEOS['%s-%s-dimer' % (dbse, '19')] = qcdb.Molecule("""
+0 1
+C         -0.00000000       0.00000000       1.81901457
+H          0.51274115       0.88809373       1.45476743
+H          0.51274115      -0.88809373       1.45476743
+H         -1.02548230       0.00000000       1.45476743
+H          0.00000000      -0.00000000       2.90722072
+--
+0 1
+C          0.00000000      -0.00000000      -1.81901457
+H         -0.00000000       0.00000000      -2.90722072
+H         -0.51274115       0.88809373      -1.45476743
+H         -0.51274115      -0.88809373      -1.45476743
+H          1.02548230      -0.00000000      -1.45476743
+units angstrom
+""")
+
+GEOS['%s-%s-dimer' % (dbse, '20')] = qcdb.Molecule("""
+0 1
+C         -0.00000000       0.00000000      -2.62458428
+H          0.51286762       0.88831278      -2.26110195
+H          0.51286762      -0.88831278      -2.26110195
+H         -0.00000000       0.00000000      -3.71273928
+H         -1.02573525       0.00000000      -2.26110195
+--
+0 1
+AR        -0.00000000       0.00000000       1.05395172
+units angstrom
+""")
+
+GEOS['%s-%s-dimer' % (dbse, '21')] = qcdb.Molecule("""
+0 1
+C          0.00000000       0.66718073      -2.29024825
+C          0.00000000      -0.66718073      -2.29024825
+H         -0.92400768       1.23202333      -2.28975239
+H          0.92400768       1.23202333      -2.28975239
+H         -0.92400768      -1.23202333      -2.28975239
+H          0.92400768      -1.23202333      -2.28975239
+--
+0 1
+AR        -0.00000000       0.00000000       1.60829261
+units angstrom
+""")
+
+GEOS['%s-%s-dimer' % (dbse, '22')] = qcdb.Molecule("""
+0 1
+H         -0.92396100       1.23195600      -1.68478123
+H          0.92396100       1.23195600      -1.68478123
+H          0.92396100      -1.23195600      -1.68478123
+H         -0.92396100      -1.23195600      -1.68478123
+C          0.00000000       0.66717600      -1.68478123
+C          0.00000000      -0.66717600      -1.68478123
+--
+0 1
+H         -0.00000000      -1.66786500       1.81521877
+H         -0.00000000       1.66786500       1.81521877
+C         -0.00000000      -0.60339700       1.81521877
+C         -0.00000000       0.60339700       1.81521877
+units angstrom
+""")
+
+GEOS['%s-%s-dimer' % (dbse, '23')] = qcdb.Molecule("""
+0 1
+H         -0.92396100       1.23195600      -1.75000000
+H          0.92396100       1.23195600      -1.75000000
+H          0.92396100      -1.23195600      -1.75000000
+H         -0.92396100      -1.23195600      -1.75000000
+C          0.00000000       0.66717600      -1.75000000
+C         -0.00000000      -0.66717600      -1.75000000
+--
+0 1
+H         -0.92396100       1.23195600       1.75000000
+H          0.92396100       1.23195600       1.75000000
+H          0.92396100      -1.23195600       1.75000000
+H         -0.92396100      -1.23195600       1.75000000
+C          0.00000000       0.66717600       1.75000000
+C         -0.00000000      -0.66717600       1.75000000
+units angstrom
+""")
+
+GEOS['%s-%s-dimer' % (dbse, '24')] = qcdb.Molecule("""
+0 1
+H         -0.00000000      -1.66786500      -1.75000000
+H          0.00000000       1.66786500      -1.75000000
+C         -0.00000000      -0.60339700      -1.75000000
+C          0.00000000       0.60339700      -1.75000000
+--
+0 1
+H         -0.00000000      -1.66786500       1.75000000
+H          0.00000000       1.66786500       1.75000000
+C         -0.00000000      -0.60339700       1.75000000
+C          0.00000000       0.60339700       1.75000000
+units angstrom
+""")
+
+
+# <<< Derived Geometry Strings >>>
+for rxn in HRXN:
+    GEOS['%s-%s-monoA-unCP' % (dbse, rxn)] = GEOS['%s-%s-dimer' % (dbse, rxn)].extract_fragments(1)
+    GEOS['%s-%s-monoB-unCP' % (dbse, rxn)] = GEOS['%s-%s-dimer' % (dbse, rxn)].extract_fragments(2)
+    GEOS['%s-%s-monoA-CP'   % (dbse, rxn)] = GEOS['%s-%s-dimer' % (dbse, rxn)].extract_fragments(1, 2)
+    GEOS['%s-%s-monoB-CP'   % (dbse, rxn)] = GEOS['%s-%s-dimer' % (dbse, rxn)].extract_fragments(2, 1)
diff -Naur psi4-1.2.1/psi4/src/psi4/ccenergy/ccwave.h psi4-1.2.1-psiapi_extend-for-oepdev/psi4/src/psi4/ccenergy/ccwave.h
--- psi4-1.2.1/psi4/src/psi4/ccenergy/ccwave.h	2018-07-25 04:11:25.000000000 +0200
+++ psi4-1.2.1-psiapi_extend-for-oepdev/psi4/src/psi4/ccenergy/ccwave.h	2020-07-15 12:43:57.087748533 +0200
@@ -33,6 +33,9 @@
 #include "MOInfo.h"
 #include "Params.h"
 #include "Local.h"
+#include "psi4/pragma.h"
+#include "psi4/psi4-dec.h"
+
 
 namespace psi {
 class Options;
@@ -44,7 +47,8 @@
 
 namespace psi { namespace ccenergy {
 
-class CCEnergyWavefunction : public Wavefunction
+
+class PSI_API CCEnergyWavefunction : public Wavefunction
 {
 public:
     CCEnergyWavefunction(std::shared_ptr<Wavefunction> reference_wavefunction, Options &options);
diff -Naur psi4-1.2.1/psi4/src/psi4/libciomr/libciomr.h psi4-1.2.1-psiapi_extend-for-oepdev/psi4/src/psi4/libciomr/libciomr.h
--- psi4-1.2.1/psi4/src/psi4/libciomr/libciomr.h	2018-07-25 04:11:25.000000000 +0200
+++ psi4-1.2.1-psiapi_extend-for-oepdev/psi4/src/psi4/libciomr/libciomr.h	2020-07-15 12:43:57.095749176 +0200
@@ -58,7 +58,7 @@
 
 void flin(double **a,double *b,int in,int im,double *det);
 void free_matrix(double **array, size_t size) ;
-double * init_array(size_t size) ;
+PSI_API double * init_array(size_t size) ;
 double ** init_matrix(size_t rows, size_t cols) ;
 
 void lubksb(double **a,int n,int *indx,double *b);
diff -Naur psi4-1.2.1/psi4/src/psi4/libcubeprop/csg.h psi4-1.2.1-psiapi_extend-for-oepdev/psi4/src/psi4/libcubeprop/csg.h
--- psi4-1.2.1/psi4/src/psi4/libcubeprop/csg.h	2018-07-25 04:11:25.000000000 +0200
+++ psi4-1.2.1-psiapi_extend-for-oepdev/psi4/src/psi4/libcubeprop/csg.h	2020-07-15 12:43:57.095749176 +0200
@@ -41,7 +41,7 @@
 class RKSFunctions;
 class BlockOPoints;
 
-class CubicScalarGrid {
+class PSI_API CubicScalarGrid {
    protected:
     // => Input Specification <= //
 
diff -Naur psi4-1.2.1/psi4/src/psi4/libdpd/dpd.h psi4-1.2.1-psiapi_extend-for-oepdev/psi4/src/psi4/libdpd/dpd.h
--- psi4-1.2.1/psi4/src/psi4/libdpd/dpd.h	2018-07-25 04:11:25.000000000 +0200
+++ psi4-1.2.1-psiapi_extend-for-oepdev/psi4/src/psi4/libdpd/dpd.h	2020-07-15 12:43:57.099749497 +0200
@@ -525,12 +525,12 @@
 extern dpd_gbl dpd_main;
 extern PSI_API DPD* global_dpd_;
 extern PSI_API int dpd_default;
-extern DPD* dpd_list[2];
+extern PSI_API DPD* dpd_list[2];
 extern PSI_API int dpd_set_default(int dpd_num);
 extern int dpd_init(int dpd_num, int nirreps, long int memory, int cachetype,
             int *cachefiles, int **cachelist, dpd_file4_cache_entry *priority,
             int num_subspaces, std::vector<int*> &spaceArrays);
-extern int dpd_close(int dpd_num);
+extern int PSI_API dpd_close(int dpd_num);
 extern long int PSI_API dpd_memfree(void);
 extern void dpd_memset(long int memory);
 
diff -Naur psi4-1.2.1/psi4/src/psi4/libdpd/dpdmospace.h psi4-1.2.1-psiapi_extend-for-oepdev/psi4/src/psi4/libdpd/dpdmospace.h
--- psi4-1.2.1/psi4/src/psi4/libdpd/dpdmospace.h	2018-07-25 04:11:25.000000000 +0200
+++ psi4-1.2.1-psiapi_extend-for-oepdev/psi4/src/psi4/libdpd/dpdmospace.h	2020-07-15 12:43:57.099749497 +0200
@@ -38,7 +38,7 @@
 
 std::vector<std::string> dpd_split(const std::string &indices);
 
-class DPDMOSpace {
+class PSI_API DPDMOSpace {
   protected:
     // name of the space
     char label_;
diff -Naur psi4-1.2.1/psi4/src/psi4/libfunctional/superfunctional.h psi4-1.2.1-psiapi_extend-for-oepdev/psi4/src/psi4/libfunctional/superfunctional.h
--- psi4-1.2.1/psi4/src/psi4/libfunctional/superfunctional.h	2018-07-25 04:11:25.000000000 +0200
+++ psi4-1.2.1-psiapi_extend-for-oepdev/psi4/src/psi4/libfunctional/superfunctional.h	2020-07-15 12:43:57.099749497 +0200
@@ -59,7 +59,7 @@
  * E(-D) is an empirical dispersion correction of some form
  *
  **/
-class SuperFunctional {
+class PSI_API SuperFunctional {
 
 protected:
 
diff -Naur psi4-1.2.1/psi4/src/psi4/libiwl/iwl.h psi4-1.2.1-psiapi_extend-for-oepdev/psi4/src/psi4/libiwl/iwl.h
--- psi4-1.2.1/psi4/src/psi4/libiwl/iwl.h	2018-07-25 04:11:25.000000000 +0200
+++ psi4-1.2.1-psiapi_extend-for-oepdev/psi4/src/psi4/libiwl/iwl.h	2020-07-15 12:43:57.099749497 +0200
@@ -61,7 +61,7 @@
 void iwl_buf_fetch(struct iwlbuf *Buf);
 void iwl_buf_put(struct iwlbuf *Buf);
 
-int iwl_rdone(int itap, const char *label, double *ints, int ntri, int erase,
+int PSI_API iwl_rdone(int itap, const char *label, double *ints, int ntri, int erase,
               int printflg, std::string out);
 
 void iwl_buf_init(struct iwlbuf *Buf, int intape, double cutoff,
diff -Naur psi4-1.2.1/psi4/src/psi4/libmints/fjt.h psi4-1.2.1-psiapi_extend-for-oepdev/psi4/src/psi4/libmints/fjt.h
--- psi4-1.2.1/psi4/src/psi4/libmints/fjt.h	2018-07-25 04:11:25.000000000 +0200
+++ psi4-1.2.1-psiapi_extend-for-oepdev/psi4/src/psi4/libmints/fjt.h	2020-07-15 12:43:57.103749818 +0200
@@ -61,7 +61,7 @@
 class CorrelationFactor;
 
 /// Evaluates the Boys function F_j(T)
-class Fjt {
+class PSI_API Fjt {
 public:
     Fjt();
     virtual ~Fjt();
@@ -76,7 +76,7 @@
 #define TAYLOR_INTERPOLATION_ORDER 6
 #define TAYLOR_INTERPOLATION_AND_RECURSION 0  // compute F_lmax(T) and then iterate down to F_0(T)? Else use interpolation only
 /// Uses Taylor interpolation of up to 8-th order to compute the Boys function
-class Taylor_Fjt : public Fjt {
+class PSI_API Taylor_Fjt : public Fjt {
     static double relative_zero_;
 public:
     static const int max_interp_order = 8;
diff -Naur psi4-1.2.1/psi4/src/psi4/libmints/gshell.h psi4-1.2.1-psiapi_extend-for-oepdev/psi4/src/psi4/libmints/gshell.h
--- psi4-1.2.1/psi4/src/psi4/libmints/gshell.h	2018-07-25 04:11:25.000000000 +0200
+++ psi4-1.2.1-psiapi_extend-for-oepdev/psi4/src/psi4/libmints/gshell.h	2020-07-15 12:43:57.103749818 +0200
@@ -32,6 +32,7 @@
 #include <cstdio>
 #include <vector>
 #include "psi4/libmints/vector3.h"
+#include "psi4/pragma.h"
 
 namespace psi {
 
@@ -59,7 +60,7 @@
  *         slower data structures, which are easier to construct. These are used to build the
  *         basis set, which builds more efficient pointer-based GaussianShell objects.
  */
-class ShellInfo
+class PSI_API ShellInfo
 {
 protected:
     /// Angular momentum
@@ -186,7 +187,7 @@
  *  \class GaussianShell
  *  \brief Gaussian orbital shell.
  */
-class GaussianShell
+class PSI_API GaussianShell
 {
 protected:
     /// Angular momentum
diff -Naur psi4-1.2.1/psi4/src/psi4/libmints/multipoles.h psi4-1.2.1-psiapi_extend-for-oepdev/psi4/src/psi4/libmints/multipoles.h
--- psi4-1.2.1/psi4/src/psi4/libmints/multipoles.h	2018-07-25 04:11:25.000000000 +0200
+++ psi4-1.2.1-psiapi_extend-for-oepdev/psi4/src/psi4/libmints/multipoles.h	2020-07-15 12:43:57.103749818 +0200
@@ -43,7 +43,7 @@
  *  \brief Computes arbitrary-order multipole integrals.
  *
  * Use an IntegralFactory to create this object. */
-class MultipoleInt : public OneBodyAOInt
+class PSI_API MultipoleInt : public OneBodyAOInt
 {
     //! Obara and Saika recursion object to be used.
     ObaraSaikaTwoCenterMIRecursion mi_recur_;
diff -Naur psi4-1.2.1/psi4/src/psi4/libmints/multipolesymmetry.h psi4-1.2.1-psiapi_extend-for-oepdev/psi4/src/psi4/libmints/multipolesymmetry.h
--- psi4-1.2.1/psi4/src/psi4/libmints/multipolesymmetry.h	2018-07-25 04:11:25.000000000 +0200
+++ psi4-1.2.1-psiapi_extend-for-oepdev/psi4/src/psi4/libmints/multipolesymmetry.h	2020-07-15 12:43:57.103749818 +0200
@@ -106,7 +106,7 @@
     std::vector<SharedMatrix > create_matrices(const std::string& basename);
 };
 
-class MultipoleSymmetry
+class PSI_API MultipoleSymmetry
 {
     // The order of the multipole (dipole=1, quadrupole=2, etc...)
     int order_;
diff -Naur psi4-1.2.1/psi4/src/psi4/libmints/oeprop.h psi4-1.2.1-psiapi_extend-for-oepdev/psi4/src/psi4/libmints/oeprop.h
--- psi4-1.2.1/psi4/src/psi4/libmints/oeprop.h	2018-07-25 04:11:25.000000000 +0200
+++ psi4-1.2.1-psiapi_extend-for-oepdev/psi4/src/psi4/libmints/oeprop.h	2020-07-15 12:43:57.103749818 +0200
@@ -35,6 +35,7 @@
 #include <string>
 
 #include "typedefs.h"
+#include "psi4/pragma.h"
 #include "psi4/libmints/vector3.h"
 
 namespace psi {
@@ -61,7 +62,7 @@
 *  wavefunction, substitutions may be made later, to use different orbitals
 *  or densities.
 */
-class Prop {
+class PSI_API Prop {
 
 protected:
     /// Print flag
@@ -230,7 +231,7 @@
 * The OEProp object, computes arbitrary expectation values (scalars)
 * analyses (typically vectors)
 **/
-class OEProp : public Prop {
+class PSI_API OEProp : public Prop {
 
 protected:
     /// Common initialization
diff -Naur psi4-1.2.1/psi4/src/psi4/libmints/onebody.h psi4-1.2.1-psiapi_extend-for-oepdev/psi4/src/psi4/libmints/onebody.h
--- psi4-1.2.1/psi4/src/psi4/libmints/onebody.h	2018-07-25 04:11:25.000000000 +0200
+++ psi4-1.2.1-psiapi_extend-for-oepdev/psi4/src/psi4/libmints/onebody.h	2020-07-15 12:43:57.103749818 +0200
@@ -52,7 +52,7 @@
  *  \class OneBodyInt
  *  \brief Basis class for all one-electron integrals.
  */
-class OneBodyAOInt
+class PSI_API OneBodyAOInt
 {
 protected:
     std::shared_ptr<BasisSet> bs1_;
diff -Naur psi4-1.2.1/psi4/src/psi4/libmints/potential.h psi4-1.2.1-psiapi_extend-for-oepdev/psi4/src/psi4/libmints/potential.h
--- psi4-1.2.1/psi4/src/psi4/libmints/potential.h	2018-07-25 04:11:25.000000000 +0200
+++ psi4-1.2.1-psiapi_extend-for-oepdev/psi4/src/psi4/libmints/potential.h	2020-07-15 12:43:57.103749818 +0200
@@ -47,7 +47,7 @@
  *  \brief Computes potential integrals.
  * Use an IntegralFactory to create this object.
  */
-class PotentialInt : public OneBodyAOInt
+class PSI_API PotentialInt : public OneBodyAOInt
 {
     /// Computes integrals between two shell objects.
     void compute_pair(const GaussianShell&, const GaussianShell&);
diff -Naur psi4-1.2.1/psi4/src/psi4/libscf_solver/hf.h psi4-1.2.1-psiapi_extend-for-oepdev/psi4/src/psi4/libscf_solver/hf.h
--- psi4-1.2.1/psi4/src/psi4/libscf_solver/hf.h	2018-07-25 04:11:25.000000000 +0200
+++ psi4-1.2.1-psiapi_extend-for-oepdev/psi4/src/psi4/libscf_solver/hf.h	2020-07-15 12:43:57.107750139 +0200
@@ -45,7 +45,7 @@
 class PSIO;
 namespace scf {
 
-class HF : public Wavefunction {
+class PSI_API HF : public Wavefunction {
 protected:
 
     /// The kinetic energy matrix
diff -Naur psi4-1.2.1/psi4/src/psi4/libscf_solver/rhf.h psi4-1.2.1-psiapi_extend-for-oepdev/psi4/src/psi4/libscf_solver/rhf.h
--- psi4-1.2.1/psi4/src/psi4/libscf_solver/rhf.h	2018-07-25 04:11:25.000000000 +0200
+++ psi4-1.2.1-psiapi_extend-for-oepdev/psi4/src/psi4/libscf_solver/rhf.h	2020-07-15 12:43:57.107750139 +0200
@@ -36,7 +36,7 @@
 
 namespace scf {
 
-class RHF : public HF {
+class PSI_API RHF : public HF {
 protected:
 
     // Temporary matrices
diff -Naur psi4-1.2.1/psi4/src/psi4/libscf_solver/rohf.h psi4-1.2.1-psiapi_extend-for-oepdev/psi4/src/psi4/libscf_solver/rohf.h
--- psi4-1.2.1/psi4/src/psi4/libscf_solver/rohf.h	2018-07-25 04:11:25.000000000 +0200
+++ psi4-1.2.1-psiapi_extend-for-oepdev/psi4/src/psi4/libscf_solver/rohf.h	2020-07-15 12:43:57.107750139 +0200
@@ -35,7 +35,7 @@
 
 namespace psi { namespace scf {
 
-class ROHF : public HF {
+class PSI_API ROHF : public HF {
 protected:
     SharedMatrix moFeff_;
     SharedMatrix soFeff_;
diff -Naur psi4-1.2.1/psi4/src/psi4/libtrans/integraltransform.cc psi4-1.2.1-psiapi_extend-for-oepdev/psi4/src/psi4/libtrans/integraltransform.cc
--- psi4-1.2.1/psi4/src/psi4/libtrans/integraltransform.cc	2018-07-25 04:11:25.000000000 +0200
+++ psi4-1.2.1-psiapi_extend-for-oepdev/psi4/src/psi4/libtrans/integraltransform.cc	2020-07-15 12:43:57.107750139 +0200
@@ -278,6 +278,7 @@
     cacheFiles_ = init_int_array(PSIO_MAXUNIT);
     cacheList_ = init_int_matrix(numIndexArrays, numIndexArrays);
     int currentActiveDPD = psi::dpd_default;
+    if (!dpd_list[myDPDNum_] == 0) dpd_close(myDPDNum_); // BB add: necessary to close previous DPD instances
     dpd_init(myDPDNum_, nirreps_, memory_, 0, cacheFiles_, cacheList_, nullptr, numSpaces, spaceArray_);
 
     // We have to redefine the MO coefficients for a UHF-like treatment
diff -Naur psi4-1.2.1/psi4/src/psi4/optking/mem.h psi4-1.2.1-psiapi_extend-for-oepdev/psi4/src/psi4/optking/mem.h
--- psi4-1.2.1/psi4/src/psi4/optking/mem.h	2018-07-25 04:11:25.000000000 +0200
+++ psi4-1.2.1-psiapi_extend-for-oepdev/psi4/src/psi4/optking/mem.h	2020-07-15 12:43:57.111750460 +0200
@@ -33,12 +33,14 @@
 #ifndef _opt_mem_h_
 #define _opt_mem_h_
 
+#include "psi4/pragma.h"
+
 namespace opt {
 
 void zero_array(double *A, long int n);
 void zero_int_array(int *A, long int n);
 
-double *init_array(long int m);
+PSI_API double *init_array(long int m);
 void free_array(double *f);
 
 int *init_int_array(int m);
