diff -Naur psi4-1.2.1/psi4/src/psi4/libcubeprop/csg.h psi4-1.2.1-psiapi_extend-for-oepdev/psi4/src/psi4/libcubeprop/csg.h
--- psi4-1.2.1/psi4/src/psi4/libcubeprop/csg.h	2018-07-25 04:11:25.000000000 +0200
+++ psi4-1.2.1-psiapi_extend-for-oepdev/psi4/src/psi4/libcubeprop/csg.h	2018-11-06 10:28:27.023785300 +0100
@@ -41,7 +41,7 @@
 class RKSFunctions;
 class BlockOPoints;
 
-class CubicScalarGrid {
+class PSI_API CubicScalarGrid {
    protected:
     // => Input Specification <= //
 
diff -Naur psi4-1.2.1/psi4/src/psi4/libfunctional/superfunctional.h psi4-1.2.1-psiapi_extend-for-oepdev/psi4/src/psi4/libfunctional/superfunctional.h
--- psi4-1.2.1/psi4/src/psi4/libfunctional/superfunctional.h	2018-07-25 04:11:25.000000000 +0200
+++ psi4-1.2.1-psiapi_extend-for-oepdev/psi4/src/psi4/libfunctional/superfunctional.h	2018-11-06 10:28:27.112129500 +0100
@@ -59,7 +59,7 @@
  * E(-D) is an empirical dispersion correction of some form
  *
  **/
-class SuperFunctional {
+class PSI_API SuperFunctional {
 
 protected:
 
diff -Naur psi4-1.2.1/psi4/src/psi4/libmints/fjt.h psi4-1.2.1-psiapi_extend-for-oepdev/psi4/src/psi4/libmints/fjt.h
--- psi4-1.2.1/psi4/src/psi4/libmints/fjt.h	2018-07-25 04:11:25.000000000 +0200
+++ psi4-1.2.1-psiapi_extend-for-oepdev/psi4/src/psi4/libmints/fjt.h	2018-11-06 10:28:27.190730800 +0100
@@ -61,7 +61,7 @@
 class CorrelationFactor;
 
 /// Evaluates the Boys function F_j(T)
-class Fjt {
+class PSI_API Fjt {
 public:
     Fjt();
     virtual ~Fjt();
@@ -76,7 +76,7 @@
 #define TAYLOR_INTERPOLATION_ORDER 6
 #define TAYLOR_INTERPOLATION_AND_RECURSION 0  // compute F_lmax(T) and then iterate down to F_0(T)? Else use interpolation only
 /// Uses Taylor interpolation of up to 8-th order to compute the Boys function
-class Taylor_Fjt : public Fjt {
+class PSI_API Taylor_Fjt : public Fjt {
     static double relative_zero_;
 public:
     static const int max_interp_order = 8;
diff -Naur psi4-1.2.1/psi4/src/psi4/libmints/gshell.h psi4-1.2.1-psiapi_extend-for-oepdev/psi4/src/psi4/libmints/gshell.h
--- psi4-1.2.1/psi4/src/psi4/libmints/gshell.h	2018-07-25 04:11:25.000000000 +0200
+++ psi4-1.2.1-psiapi_extend-for-oepdev/psi4/src/psi4/libmints/gshell.h	2018-11-06 10:28:27.190730800 +0100
@@ -32,6 +32,7 @@
 #include <cstdio>
 #include <vector>
 #include "psi4/libmints/vector3.h"
+#include "psi4/pragma.h"
 
 namespace psi {
 
@@ -186,7 +187,7 @@
  *  \class GaussianShell
  *  \brief Gaussian orbital shell.
  */
-class GaussianShell
+class PSI_API GaussianShell
 {
 protected:
     /// Angular momentum
diff -Naur psi4-1.2.1/psi4/src/psi4/libmints/multipoles.h psi4-1.2.1-psiapi_extend-for-oepdev/psi4/src/psi4/libmints/multipoles.h
--- psi4-1.2.1/psi4/src/psi4/libmints/multipoles.h	2018-07-25 04:11:25.000000000 +0200
+++ psi4-1.2.1-psiapi_extend-for-oepdev/psi4/src/psi4/libmints/multipoles.h	2018-11-06 10:28:27.191728100 +0100
@@ -43,7 +43,7 @@
  *  \brief Computes arbitrary-order multipole integrals.
  *
  * Use an IntegralFactory to create this object. */
-class MultipoleInt : public OneBodyAOInt
+class PSI_API MultipoleInt : public OneBodyAOInt
 {
     //! Obara and Saika recursion object to be used.
     ObaraSaikaTwoCenterMIRecursion mi_recur_;
diff -Naur psi4-1.2.1/psi4/src/psi4/libmints/multipolesymmetry.h psi4-1.2.1-psiapi_extend-for-oepdev/psi4/src/psi4/libmints/multipolesymmetry.h
--- psi4-1.2.1/psi4/src/psi4/libmints/multipolesymmetry.h	2018-07-25 04:11:25.000000000 +0200
+++ psi4-1.2.1-psiapi_extend-for-oepdev/psi4/src/psi4/libmints/multipolesymmetry.h	2018-11-06 10:28:27.191728100 +0100
@@ -106,7 +106,7 @@
     std::vector<SharedMatrix > create_matrices(const std::string& basename);
 };
 
-class MultipoleSymmetry
+class PSI_API MultipoleSymmetry
 {
     // The order of the multipole (dipole=1, quadrupole=2, etc...)
     int order_;
diff -Naur psi4-1.2.1/psi4/src/psi4/libmints/oeprop.h psi4-1.2.1-psiapi_extend-for-oepdev/psi4/src/psi4/libmints/oeprop.h
--- psi4-1.2.1/psi4/src/psi4/libmints/oeprop.h	2018-07-25 04:11:25.000000000 +0200
+++ psi4-1.2.1-psiapi_extend-for-oepdev/psi4/src/psi4/libmints/oeprop.h	2018-11-06 10:28:27.191728100 +0100
@@ -35,6 +35,7 @@
 #include <string>
 
 #include "typedefs.h"
+#include "psi4/pragma.h"
 #include "psi4/libmints/vector3.h"
 
 namespace psi {
@@ -61,7 +62,7 @@
 *  wavefunction, substitutions may be made later, to use different orbitals
 *  or densities.
 */
-class Prop {
+class PSI_API Prop {
 
 protected:
     /// Print flag
@@ -230,7 +231,7 @@
 * The OEProp object, computes arbitrary expectation values (scalars)
 * analyses (typically vectors)
 **/
-class OEProp : public Prop {
+class PSI_API OEProp : public Prop {
 
 protected:
     /// Common initialization
diff -Naur psi4-1.2.1/psi4/src/psi4/libmints/onebody.h psi4-1.2.1-psiapi_extend-for-oepdev/psi4/src/psi4/libmints/onebody.h
--- psi4-1.2.1/psi4/src/psi4/libmints/onebody.h	2018-07-25 04:11:25.000000000 +0200
+++ psi4-1.2.1-psiapi_extend-for-oepdev/psi4/src/psi4/libmints/onebody.h	2018-11-06 10:28:27.189733500 +0100
@@ -52,7 +52,7 @@
  *  \class OneBodyInt
  *  \brief Basis class for all one-electron integrals.
  */
-class OneBodyAOInt
+class PSI_API OneBodyAOInt
 {
 protected:
     std::shared_ptr<BasisSet> bs1_;
diff -Naur psi4-1.2.1/psi4/src/psi4/libmints/potential.h psi4-1.2.1-psiapi_extend-for-oepdev/psi4/src/psi4/libmints/potential.h
--- psi4-1.2.1/psi4/src/psi4/libmints/potential.h	2018-07-25 04:11:25.000000000 +0200
+++ psi4-1.2.1-psiapi_extend-for-oepdev/psi4/src/psi4/libmints/potential.h	2018-11-06 10:28:27.189733500 +0100
@@ -47,7 +47,7 @@
  *  \brief Computes potential integrals.
  * Use an IntegralFactory to create this object.
  */
-class PotentialInt : public OneBodyAOInt
+class PSI_API PotentialInt : public OneBodyAOInt
 {
     /// Computes integrals between two shell objects.
     void compute_pair(const GaussianShell&, const GaussianShell&);
diff -Naur psi4-1.2.1/psi4/src/psi4/libscf_solver/hf.h psi4-1.2.1-psiapi_extend-for-oepdev/psi4/src/psi4/libscf_solver/hf.h
--- psi4-1.2.1/psi4/src/psi4/libscf_solver/hf.h	2018-07-25 04:11:25.000000000 +0200
+++ psi4-1.2.1-psiapi_extend-for-oepdev/psi4/src/psi4/libscf_solver/hf.h	2018-11-06 10:28:27.280490700 +0100
@@ -45,7 +45,7 @@
 class PSIO;
 namespace scf {
 
-class HF : public Wavefunction {
+class PSI_API HF : public Wavefunction {
 protected:
 
     /// The kinetic energy matrix
diff -Naur psi4-1.2.1/psi4/src/psi4/libscf_solver/rhf.h psi4-1.2.1-psiapi_extend-for-oepdev/psi4/src/psi4/libscf_solver/rhf.h
--- psi4-1.2.1/psi4/src/psi4/libscf_solver/rhf.h	2018-07-25 04:11:25.000000000 +0200
+++ psi4-1.2.1-psiapi_extend-for-oepdev/psi4/src/psi4/libscf_solver/rhf.h	2018-11-06 10:28:27.280490700 +0100
@@ -36,7 +36,7 @@
 
 namespace scf {
 
-class RHF : public HF {
+class PSI_API RHF : public HF {
 protected:
 
     // Temporary matrices
