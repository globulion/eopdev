diff -Naur psi4-1.2.1/psi4/driver/procrouting/proc.py psi4-1.2.1_changed/psi4/driver/procrouting/proc.py
--- psi4-1.2.1/psi4/driver/procrouting/proc.py	2018-07-25 04:11:25.000000000 +0200
+++ psi4-1.2.1_changed/psi4/driver/procrouting/proc.py	2020-11-18 11:59:18.406886107 +0100
@@ -2301,7 +2301,7 @@
         aux_basis = core.BasisSet.build(ref_wfn.molecule(), "DF_BASIS_CC",
                                             core.get_global_option("DF_BASIS_CC"),
                                             "RIFIT", core.get_global_option("BASIS"))
-        wfn.set_basisset("DF_BASIS_CC", aux_basis)
+        ref_wfn.set_basisset("DF_BASIS_CC", aux_basis)
 
     # Ensure IWL files have been written
     proc_util.check_iwl_file_from_scf_type(core.get_global_option('SCF_TYPE'), ref_wfn)
diff -Naur psi4-1.2.1/psi4/share/psi4/databases/A24_hcn_bb.py psi4-1.2.1_changed/psi4/share/psi4/databases/A24_hcn_bb.py
--- psi4-1.2.1/psi4/share/psi4/databases/A24_hcn_bb.py	1970-01-01 01:00:00.000000000 +0100
+++ psi4-1.2.1_changed/psi4/share/psi4/databases/A24_hcn_bb.py	2020-11-18 11:59:18.482886575 +0100
@@ -0,0 +1,650 @@
+#
+# @BEGIN LICENSE
+#
+# Psi4: an open-source quantum chemistry software package
+#
+# Copyright (c) 2007-2018 The Psi4 Developers.
+#
+# The copyrights for code used from other parties are included in
+# the corresponding files.
+#
+# This file is part of Psi4.
+#
+# Psi4 is free software; you can redistribute it and/or modify
+# it under the terms of the GNU Lesser General Public License as published by
+# the Free Software Foundation, version 3.
+#
+# Psi4 is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU Lesser General Public License for more details.
+#
+# You should have received a copy of the GNU Lesser General Public License along
+# with Psi4; if not, write to the Free Software Foundation, Inc.,
+# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
+#
+# @END LICENSE
+#
+
+"""
+| Database (Hobza) of interaction energies for bimolecular complexes.
+| Geometries from <Reference>.
+| Reference interaction energies from Rezac and Hobza, JCTC (in press).
+
+
+- **cp**  ``'off'`` <erase this comment and after unless on is a valid option> || ``'on'``
+
+- **rlxd** ``'off'`` <erase this comment and after unless on is valid option> || ``'on'``
+
+
+- **benchmark**
+
+  - ``'<benchmark_name>'`` <Reference>.
+  - |dl| ``'<default_benchmark_name>'`` |dr| <Reference>.
+
+- **subset**
+
+  - ``'small'`` <members_description>
+  - ``'large'`` <members_description>
+  - ``'<subset>'`` <members_description>
+
+"""
+import re
+import qcdb
+
+# <<< A24 Database Module >>>
+dbse = 'A24'
+
+# <<< Database Members >>>
+HRXN = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24]
+HRXN_SM = []
+HRXN_LG = []
+
+# <<< Chemical Systems Involved >>>
+RXNM = {}     # reaction matrix of reagent contributions per reaction
+ACTV = {}     # order of active reagents per reaction
+ACTV_CP = {}  # order of active reagents per counterpoise-corrected reaction
+ACTV_SA = {}  # order of active reagents for non-supermolecular calculations
+for rxn in HRXN:
+
+    RXNM[   '%s-%s' % (dbse, rxn)] = {'%s-%s-dimer'      % (dbse, rxn) : +1,
+                                      '%s-%s-monoA-CP'   % (dbse, rxn) : -1,
+                                      '%s-%s-monoB-CP'   % (dbse, rxn) : -1,
+                                      '%s-%s-monoA-unCP' % (dbse, rxn) : -1,
+                                      '%s-%s-monoB-unCP' % (dbse, rxn) : -1 }
+
+    ACTV_SA['%s-%s' % (dbse, rxn)] = ['%s-%s-dimer'      % (dbse, rxn) ]
+
+    ACTV_CP['%s-%s' % (dbse, rxn)] = ['%s-%s-dimer'      % (dbse, rxn),
+                                      '%s-%s-monoA-CP'   % (dbse, rxn),
+                                      '%s-%s-monoB-CP'   % (dbse, rxn) ]
+
+    ACTV[   '%s-%s' % (dbse, rxn)] = ['%s-%s-dimer'      % (dbse, rxn),
+                                      '%s-%s-monoA-unCP' % (dbse, rxn),
+                                      '%s-%s-monoB-unCP' % (dbse, rxn) ]
+
+# <<< Reference Values [kcal/mol] from Rezac and Hobza dx.doi.org/10.1021/ct400057w >>>
+BIND = {}
+BIND['%s-%s'            % (dbse, 1  )] =    -6.524
+BIND['%s-%s'            % (dbse, 2  )] =    -5.014
+BIND['%s-%s'            % (dbse, 3  )] =    -4.749
+BIND['%s-%s'            % (dbse, 4  )] =    -4.572
+BIND['%s-%s'            % (dbse, 5  )] =    -3.157
+BIND['%s-%s'            % (dbse, 6  )] =    -1.679
+BIND['%s-%s'            % (dbse, 7  )] =    -0.779
+BIND['%s-%s'            % (dbse, 8  )] =    -0.672
+BIND['%s-%s'            % (dbse, 9  )] =    -4.474
+BIND['%s-%s'            % (dbse, 10 )] =    -2.578
+BIND['%s-%s'            % (dbse, 11 )] =    -1.629
+BIND['%s-%s'            % (dbse, 12 )] =    -1.537
+BIND['%s-%s'            % (dbse, 13 )] =    -1.389
+BIND['%s-%s'            % (dbse, 14 )] =    -1.110
+BIND['%s-%s'            % (dbse, 15 )] =    -0.514
+BIND['%s-%s'            % (dbse, 16 )] =    -1.518
+BIND['%s-%s'            % (dbse, 17 )] =    -0.837
+BIND['%s-%s'            % (dbse, 18 )] =    -0.615
+BIND['%s-%s'            % (dbse, 19 )] =    -0.538
+BIND['%s-%s'            % (dbse, 20 )] =    -0.408
+BIND['%s-%s'            % (dbse, 21 )] =    -0.370
+BIND['%s-%s'            % (dbse, 22 )] =    0.784
+BIND['%s-%s'            % (dbse, 23 )] =    0.897
+BIND['%s-%s'            % (dbse, 24 )] =    1.075
+
+
+# <<< Comment Lines >>>
+TAGL = {}
+TAGL['%s-%s'            % (dbse, 1)] = """ water_ammonia_Cs """
+TAGL['%s-%s-dimer'      % (dbse, 1)] = """Dimer from water_ammonia_Cs """
+TAGL['%s-%s-monoA-CP'   % (dbse, 1)] = """Monomer A water_ammonia_Cs  """
+TAGL['%s-%s-monoB-CP'   % (dbse, 1)] = """Monomer B water_ammonia_Cs  """
+TAGL['%s-%s-monoA-unCP' % (dbse, 1)] = """Monomer A water_ammonia_Cs  """
+TAGL['%s-%s-monoB-unCP' % (dbse, 1)] = """Monomer B water_ammonia_Cs  """
+TAGL['%s-%s'            % (dbse, 2)] = """ water_water_Cs """
+TAGL['%s-%s-dimer'      % (dbse, 2)] = """Dimer from water_water_Cs """
+TAGL['%s-%s-monoA-CP'   % (dbse, 2)] = """Monomer A from water_water_Cs """
+TAGL['%s-%s-monoB-CP'   % (dbse, 2)] = """Monomer B from water_water_Cs """
+TAGL['%s-%s-monoA-unCP' % (dbse, 2)] = """Monomer A from water_water_Cs """
+TAGL['%s-%s-monoB-unCP' % (dbse, 2)] = """Monomer B from water_water_Cs """
+TAGL['%s-%s'            % (dbse, 3)] = """ HCN_HCN_Cxv """
+TAGL['%s-%s-dimer'      % (dbse, 3)] = """Dimer from HCN_HCN_Cxv """
+TAGL['%s-%s-monoA-CP'   % (dbse, 3)] = """Monomer A from HCN_HCN_Cxv """
+TAGL['%s-%s-monoB-CP'   % (dbse, 3)] = """Monomer B from HCN_HCN_Cxv """
+TAGL['%s-%s-monoA-unCP' % (dbse, 3)] = """Monomer A from HCN_HCN_Cxv """
+TAGL['%s-%s-monoB-unCP' % (dbse, 3)] = """Monomer B from HCN_HCN_Cxv """
+TAGL['%s-%s'            % (dbse, 4)] = """ HF_HF_Cs """
+TAGL['%s-%s-dimer'      % (dbse, 4)] = """Dimer from HF_HF_Cs  """
+TAGL['%s-%s-monoA-CP'   % (dbse, 4)] = """Monomer A from HF_HF_Cs """
+TAGL['%s-%s-monoB-CP'   % (dbse, 4)] = """Monomer B from HF_HF_Cs """
+TAGL['%s-%s-monoA-unCP' % (dbse, 4)] = """Monomer A from HF_HF_Cs """
+TAGL['%s-%s-monoB-unCP' % (dbse, 4)] = """Monomer B from HF_HF_Cs """
+TAGL['%s-%s'            % (dbse, 5)] = """ ammonia_ammonia_C2h """
+TAGL['%s-%s-dimer'      % (dbse, 5)] = """Dimer from ammonia_ammonia_C2h """
+TAGL['%s-%s-monoA-CP'   % (dbse, 5)] = """Monomer A from ammonia_ammonia_C2h """
+TAGL['%s-%s-monoB-CP'   % (dbse, 5)] = """Monomer B from ammonia_ammonia_C2h """
+TAGL['%s-%s-monoA-unCP' % (dbse, 5)] = """Monomer A from ammonia_ammonia_C2h """
+TAGL['%s-%s-monoB-unCP' % (dbse, 5)] = """Monomer B from ammonia_ammonia_C2h """
+TAGL['%s-%s'            % (dbse, 6)] = """ methane_HF_C3v """
+TAGL['%s-%s-dimer'      % (dbse, 6)] = """Dimer from methane_HF_C3v """
+TAGL['%s-%s-monoA-CP'   % (dbse, 6)] = """Monomer A from methane_HF_C3v """
+TAGL['%s-%s-monoB-CP'   % (dbse, 6)] = """Monomer B from methane_HF_C3v """
+TAGL['%s-%s-monoA-unCP' % (dbse, 6)] = """Monomer A from methane_HF_C3v """
+TAGL['%s-%s-monoB-unCP' % (dbse, 6)] = """Monomer B from methane_HF_C3v """
+TAGL['%s-%s'            % (dbse, 7)] = """ ammmonia_methane_C3v """
+TAGL['%s-%s-dimer'      % (dbse, 7)] = """Dimer from ammmonia_methane_C3v """
+TAGL['%s-%s-monoA-CP'   % (dbse, 7)] = """Monomer A from ammmonia_methane_C3v """
+TAGL['%s-%s-monoB-CP'   % (dbse, 7)] = """Monomer B from ammmonia_methane_C3v """
+TAGL['%s-%s-monoA-unCP' % (dbse, 7)] = """Monomer A from ammmonia_methane_C3v """
+TAGL['%s-%s-monoB-unCP' % (dbse, 7)] = """Monomer B from ammmonia_methane_C3v """
+TAGL['%s-%s'            % (dbse, 8)] = """ methane_water_Cs """
+TAGL['%s-%s-dimer'      % (dbse, 8)] = """Dimer from methane_water_Cs """
+TAGL['%s-%s-monoA-CP'   % (dbse, 8)] = """Monomer A from methane_water_Cs """
+TAGL['%s-%s-monoB-CP'   % (dbse, 8)] = """Monomer B from methane_water_Cs """
+TAGL['%s-%s-monoA-unCP' % (dbse, 8)] = """Monomer A from methane_water_Cs """
+TAGL['%s-%s-monoB-unCP' % (dbse, 8)] = """Monomer B from methane_water_Cs """
+TAGL['%s-%s'            % (dbse, 9)] = """ formaldehyde_formaldehyde_Cs """
+TAGL['%s-%s-dimer'      % (dbse, 9)] = """Dimer from formaldehyde_formaldehyde_Cs """
+TAGL['%s-%s-monoA-CP'   % (dbse, 9)] = """Monomer A from formaldehyde_formaldehyde_Cs """
+TAGL['%s-%s-monoB-CP'   % (dbse, 9)] = """Monomer B from formaldehyde_formaldehyde_Cs """
+TAGL['%s-%s-monoA-unCP' % (dbse, 9)] = """Monomer A from formaldehyde_formaldehyde_Cs """
+TAGL['%s-%s-monoB-unCP' % (dbse, 9)] = """Monomer B from formaldehyde_formaldehyde_Cs """
+TAGL['%s-%s'            % (dbse, 10)] = """ ethene_wat_Cs """
+TAGL['%s-%s-dimer'      % (dbse, 10)] = """Dimer from ethene_wat_Cs """
+TAGL['%s-%s-monoA-CP'   % (dbse, 10)] = """Monomer A from ethene_wat_Cs """
+TAGL['%s-%s-monoB-CP'   % (dbse, 10)] = """Monomer B from ethene_wat_Cs """
+TAGL['%s-%s-monoA-unCP' % (dbse, 10)] = """Monomer A from ethene_wat_Cs """
+TAGL['%s-%s-monoB-unCP' % (dbse, 10)] = """Monomer B from ethene_wat_Cs """
+TAGL['%s-%s'            % (dbse, 11)] = """ ethene_formaldehyde_Cs """
+TAGL['%s-%s-dimer'      % (dbse, 11)] = """Dimer from ethene_formaldehyde_Cs """
+TAGL['%s-%s-monoA-CP'   % (dbse, 11)] = """Monomer A from ethene_formaldehyde_Cs """
+TAGL['%s-%s-monoB-CP'   % (dbse, 11)] = """Monomer B from ethene_formaldehyde_Cs """
+TAGL['%s-%s-monoA-unCP' % (dbse, 11)] = """Monomer A from ethene_formaldehyde_Cs """
+TAGL['%s-%s-monoB-unCP' % (dbse, 11)] = """Monomer B from ethene_formaldehyde_Cs """
+TAGL['%s-%s'            % (dbse, 12)] = """ ethyne_ethyne_C2v """
+TAGL['%s-%s-dimer'      % (dbse, 12)] = """Dimer from ethyne_ethyne_C2v """
+TAGL['%s-%s-monoA-CP'   % (dbse, 12)] = """Monomer A from ethyne_ethyne_C2v """
+TAGL['%s-%s-monoB-CP'   % (dbse, 12)] = """Monomer B from ethyne_ethyne_C2v """
+TAGL['%s-%s-monoA-unCP' % (dbse, 12)] = """Monomer A from ethyne_ethyne_C2v """
+TAGL['%s-%s-monoB-unCP' % (dbse, 12)] = """Monomer B from ethyne_ethyne_C2v """
+TAGL['%s-%s'            % (dbse, 13)] = """ ethene_ammonia_Cs """
+TAGL['%s-%s-dimer'      % (dbse, 13)] = """Dimer from ethene_ammonia_Cs """
+TAGL['%s-%s-monoA-CP'   % (dbse, 13)] = """Monomer A from ethene_ammonia_Cs """
+TAGL['%s-%s-monoB-CP'   % (dbse, 13)] = """Monomer B from ethene_ammonia_Cs """
+TAGL['%s-%s-monoA-unCP' % (dbse, 13)] = """Monomer A from ethene_ammonia_Cs """
+TAGL['%s-%s-monoB-unCP' % (dbse, 13)] = """Monomer B from ethene_ammonia_Cs """
+TAGL['%s-%s'            % (dbse, 14)] = """ ethene_ethene_C2v """
+TAGL['%s-%s-dimer'      % (dbse, 14)] = """Dimer from ethene_ethene_C2v """
+TAGL['%s-%s-monoA-CP'   % (dbse, 14)] = """Monomer A from ethene_ethene_C2v """
+TAGL['%s-%s-monoB-CP'   % (dbse, 14)] = """Monomer B from ethene_ethene_C2v """
+TAGL['%s-%s-monoA-unCP' % (dbse, 14)] = """Monomer A from ethene_ethene_C2v """
+TAGL['%s-%s-monoB-unCP' % (dbse, 14)] = """Monomer B from ethene_ethene_C2v """
+TAGL['%s-%s'            % (dbse, 15)] = """ methane_ethene_Cs """
+TAGL['%s-%s-dimer'      % (dbse, 15)] = """Dimer from methane_ethene_Cs """
+TAGL['%s-%s-monoA-CP'   % (dbse, 15)] = """Monomer A from methane_ethene_Cs """
+TAGL['%s-%s-monoB-CP'   % (dbse, 15)] = """Monomer B from methane_ethene_Cs """
+TAGL['%s-%s-monoA-unCP' % (dbse, 15)] = """Monomer A from methane_ethene_Cs """
+TAGL['%s-%s-monoB-unCP' % (dbse, 15)] = """Monomer B from methane_ethene_Cs """
+TAGL['%s-%s'            % (dbse, 16)] = """ borane_methane_Cs """
+TAGL['%s-%s-dimer'      % (dbse, 16)] = """Dimer from borane_methane_Cs """
+TAGL['%s-%s-monoA-CP'   % (dbse, 16)] = """Monomer A from borane_methane_Cs """
+TAGL['%s-%s-monoB-CP'   % (dbse, 16)] = """Monomer B from borane_methane_Cs """
+TAGL['%s-%s-monoA-unCP' % (dbse, 16)] = """Monomer A from borane_methane_Cs """
+TAGL['%s-%s-monoB-unCP' % (dbse, 16)] = """Monomer B from borane_methane_Cs """
+TAGL['%s-%s'            % (dbse, 17)] = """ methane_ethane_Cs """
+TAGL['%s-%s-dimer'      % (dbse, 17)] = """Dimer from methane_ethane_Cs """
+TAGL['%s-%s-monoA-CP'   % (dbse, 17)] = """Monomer A from methane_ethane_Cs """
+TAGL['%s-%s-monoB-CP'   % (dbse, 17)] = """Monomer B from methane_ethane_Cs """
+TAGL['%s-%s-monoA-unCP' % (dbse, 17)] = """Monomer A from methane_ethane_Cs """
+TAGL['%s-%s-monoB-unCP' % (dbse, 17)] = """Monomer B from methane_ethane_Cs """
+TAGL['%s-%s'            % (dbse, 18)] = """ methane_ethane_C3 """
+TAGL['%s-%s-dimer'      % (dbse, 18)] = """Dimer from methane_ethane_C3 """
+TAGL['%s-%s-monoA-CP'   % (dbse, 18)] = """Monomer A from methane_ethane_C3 """
+TAGL['%s-%s-monoB-CP'   % (dbse, 18)] = """Monomer B from methane_ethane_C3 """
+TAGL['%s-%s-monoA-unCP' % (dbse, 18)] = """Monomer A from methane_ethane_C3 """
+TAGL['%s-%s-monoB-unCP' % (dbse, 18)] = """Monomer B from methane_ethane_C3 """
+TAGL['%s-%s'            % (dbse, 19)] = """ methane_methane_D3d """
+TAGL['%s-%s-dimer'      % (dbse, 19)] = """Dimer from methane_methane_D3d """
+TAGL['%s-%s-monoA-CP'   % (dbse, 19)] = """Monomer A from methane_methane_D3d """
+TAGL['%s-%s-monoB-CP'   % (dbse, 19)] = """Monomer B from methane_methane_D3d """
+TAGL['%s-%s-monoA-unCP' % (dbse, 19)] = """Monomer A from methane_methane_D3d """
+TAGL['%s-%s-monoB-unCP' % (dbse, 19)] = """Monomer B from methane_methane_D3d """
+TAGL['%s-%s'            % (dbse, 20)] = """ methane_Ar_C3v """
+TAGL['%s-%s-dimer'      % (dbse, 20)] = """Dimer from methane_Ar_C3v """
+TAGL['%s-%s-monoA-CP'   % (dbse, 20)] = """Monomer A from methane_Ar_C3v """
+TAGL['%s-%s-monoB-CP'   % (dbse, 20)] = """Monomer B from methane_Ar_C3v """
+TAGL['%s-%s-monoA-unCP' % (dbse, 20)] = """Monomer A from methane_Ar_C3v """
+TAGL['%s-%s-monoB-unCP' % (dbse, 20)] = """Monomer B from methane_Ar_C3v """
+TAGL['%s-%s'            % (dbse, 21)] = """ ethene_Ar_C2v """
+TAGL['%s-%s-dimer'      % (dbse, 21)] = """Dimer from ethene_Ar_C2v """
+TAGL['%s-%s-monoA-CP'   % (dbse, 21)] = """Monomer A from ethene_Ar_C2v """
+TAGL['%s-%s-monoB-CP'   % (dbse, 21)] = """Monomer B from ethene_Ar_C2v """
+TAGL['%s-%s-monoA-unCP' % (dbse, 21)] = """Monomer A from ethene_Ar_C2v """
+TAGL['%s-%s-monoB-unCP' % (dbse, 21)] = """Monomer B from ethene_Ar_C2v """
+TAGL['%s-%s'            % (dbse, 22)] = """ ethene_ethyne_C2v """
+TAGL['%s-%s-dimer'      % (dbse, 22)] = """Dimer from ethene_ethyne_C2v """
+TAGL['%s-%s-monoA-CP'   % (dbse, 22)] = """Monomer A from ethene_ethyne_C2v """
+TAGL['%s-%s-monoB-CP'   % (dbse, 22)] = """Monomer B from ethene_ethyne_C2v """
+TAGL['%s-%s-monoA-unCP' % (dbse, 22)] = """Monomer A from ethene_ethyne_C2v """
+TAGL['%s-%s-monoB-unCP' % (dbse, 22)] = """Monomer B from ethene_ethyne_C2v """
+TAGL['%s-%s'            % (dbse, 23)] = """ ethene_ethene_D2h """
+TAGL['%s-%s-dimer'      % (dbse, 23)] = """Dimer from ethene_ethene_D2h """
+TAGL['%s-%s-monoA-CP'   % (dbse, 23)] = """Monomer A from ethene_ethene_D2h """
+TAGL['%s-%s-monoB-CP'   % (dbse, 23)] = """Monomer B from ethene_ethene_D2h """
+TAGL['%s-%s-monoA-unCP' % (dbse, 23)] = """Monomer A from ethene_ethene_D2h """
+TAGL['%s-%s-monoB-unCP' % (dbse, 23)] = """Monomer B from ethene_ethene_D2h """
+TAGL['%s-%s'            % (dbse, 24)] = """ ethyne_ethyne_D2h """
+TAGL['%s-%s-dimer'      % (dbse, 24)] = """Dimer from ethyne_ethyne_D2h """
+TAGL['%s-%s-monoA-CP'   % (dbse, 24)] = """Monomer A from ethyne_ethyne_D2h """
+TAGL['%s-%s-monoB-CP'   % (dbse, 24)] = """Monomer B from ethyne_ethyne_D2h """
+TAGL['%s-%s-monoA-unCP' % (dbse, 24)] = """Monomer A from ethyne_ethyne_D2h """
+TAGL['%s-%s-monoB-unCP' % (dbse, 24)] = """Monomer B from ethyne_ethyne_D2h """
+
+# <<< Geometry Specification Strings >>>
+GEOS = {}
+
+GEOS['%s-%s-dimer' % (dbse, '1')] = qcdb.Molecule("""
+0 1
+O          0.00000000      -0.05786571      -1.47979303
+H          0.00000000       0.82293384      -1.85541474
+H          0.00000000       0.07949567      -0.51934253
+--
+0 1
+N          0.00000000       0.01436394       1.46454628
+H          0.00000000      -0.98104857       1.65344779
+H         -0.81348351       0.39876776       1.92934049
+H          0.81348351       0.39876776       1.92934049
+units angstrom
+""")
+
+GEOS['%s-%s-dimer' % (dbse, '2')] = qcdb.Molecule("""
+0 1
+O         -0.06699914       0.00000000       1.49435474
+H          0.81573427       0.00000000       1.86586639
+H          0.06885510       0.00000000       0.53914277
+--
+0 1
+O          0.06254775       0.00000000      -1.42263208
+H         -0.40696540      -0.76017841      -1.77174450
+H         -0.40696540       0.76017841      -1.77174450
+units angstrom
+""")
+
+# HCN dimer was rotated in space because of symmetry problem. Structure is identical as in original database A24.py
+GEOS['%s-%s-dimer' % (dbse, '3')] = qcdb.Molecule("""
+0 1
+H        2.71979       -3.72263        1.46360 
+C        2.04705       -2.94225        1.74745 
+N        1.32000       -2.09886        2.05421 
+--
+0 1
+H       -0.08078       -0.47394        2.64524
+C       -0.75706        0.31054        2.93058
+N       -1.48547        1.15550        3.23791
+units angstrom
+""")
+
+GEOS['%s-%s-dimer' % (dbse, '4')] = qcdb.Molecule("""
+0 1
+H          0.00000000       0.80267982       1.69529329
+F          0.00000000      -0.04596666       1.34034818
+--
+0 1
+H          0.00000000      -0.12040787      -0.49082840
+F          0.00000000       0.00976945      -1.40424978
+units angstrom
+""")
+
+GEOS['%s-%s-dimer' % (dbse, '5')] = qcdb.Molecule("""
+0 1
+N         -0.04998129      -1.58709323       0.00000000
+H          0.12296265      -2.16846018       0.81105976
+H          0.12296265      -2.16846018      -0.81105976
+H          0.65988580      -0.86235298       0.00000000
+--
+0 1
+N          0.04998129       1.58709323       0.00000000
+H         -0.12296265       2.16846018       0.81105976
+H         -0.65988580       0.86235298       0.00000000
+H         -0.12296265       2.16846018      -0.81105976
+units angstrom
+""")
+
+GEOS['%s-%s-dimer' % (dbse, '6')] = qcdb.Molecule("""
+0 1
+C          0.00000000      -0.00000000       1.77071609
+H          0.51593378      -0.89362352       1.42025061
+H         -0.00000000       0.00000000       2.85805859
+H          0.51593378       0.89362352       1.42025061
+H         -1.03186756       0.00000000       1.42025061
+--
+0 1
+H         -0.00000000       0.00000000      -0.54877328
+F         -0.00000000       0.00000000      -1.46803256
+units angstrom
+""")
+
+GEOS['%s-%s-dimer' % (dbse, '7')] = qcdb.Molecule("""
+0 1
+N         -0.00000000       0.00000000       1.84833659
+H          0.93730979      -0.00000000       2.23206741
+H         -0.46865489      -0.81173409       2.23206741
+H         -0.46865489       0.81173409       2.23206741
+--
+0 1
+H          0.00000000      -0.00000000      -0.94497174
+C          0.00000000      -0.00000000      -2.03363752
+H          0.51251439       0.88770096      -2.40095125
+H          0.51251439      -0.88770096      -2.40095125
+H         -1.02502878       0.00000000      -2.40095125
+units angstrom
+""")
+
+GEOS['%s-%s-dimer' % (dbse, '8')] = qcdb.Molecule("""
+0 1
+C          0.00069016       0.00000000      -1.99985520
+H         -0.50741740       0.88759452      -2.37290605
+H          1.03052749       0.00000000      -2.35282982
+H         -0.01314396       0.00000000      -0.91190852
+H         -0.50741740      -0.88759452      -2.37290605
+--
+0 1
+O         -0.00472553       0.00000000       1.71597466
+H          0.03211863       0.75755459       2.30172044
+H          0.03211863      -0.75755459       2.30172044
+units angstrom
+""")
+
+GEOS['%s-%s-dimer' % (dbse, '9')] = qcdb.Molecule("""
+0 1
+C          0.00000000       0.60123980      -1.35383976
+O          0.00000000      -0.59301814      -1.55209021
+H          0.93542250       1.17427624      -1.26515132
+H         -0.93542250       1.17427624      -1.26515132
+--
+0 1
+C          0.00000000      -0.60200476       1.55228866
+O          0.00000000       0.59238638       1.35511328
+H          0.00000000      -1.00937982       2.57524635
+H          0.00000000      -1.32002906       0.71694997
+units angstrom
+""")
+
+GEOS['%s-%s-dimer' % (dbse, '10')] = qcdb.Molecule("""
+0 1
+C          0.01058825      -0.66806246       1.29820809
+C          0.01058825       0.66806246       1.29820809
+H          0.86863216       1.23267933       0.95426815
+H         -0.84608285       1.23258495       1.64525385
+H         -0.84608285      -1.23258495       1.64525385
+H          0.86863216      -1.23267933       0.95426815
+--
+0 1
+H         -0.79685627       0.00000000      -2.50911038
+O          0.04347445       0.00000000      -2.04834054
+H         -0.19067546       0.00000000      -1.11576944
+units angstrom
+""")
+
+GEOS['%s-%s-dimer' % (dbse, '11')] = qcdb.Molecule("""
+0 1
+C          0.00000000      -0.59797089       1.47742864
+C          0.00000000       0.42131196       2.33957848
+H          0.92113351      -1.02957102       1.10653516
+H         -0.92113351      -1.02957102       1.10653516
+H         -0.92393815       0.85124826       2.70694633
+H          0.92393815       0.85124826       2.70694633
+--
+0 1
+O          0.00000000      -0.51877334      -1.82845679
+C          0.00000000       0.68616220      -1.73709412
+H          0.00000000       1.33077474      -2.63186355
+H          0.00000000       1.18902807      -0.75645498
+units angstrom
+""")
+
+GEOS['%s-%s-dimer' % (dbse, '12')] = qcdb.Molecule("""
+0 1
+C          0.00000000       0.60356400      -2.18173438
+H          0.00000000       1.66847581      -2.18429610
+C          0.00000000      -0.60356400      -2.18173438
+H          0.00000000      -1.66847581      -2.18429610
+--
+0 1
+C         -0.00000000       0.00000000       1.57829513
+H         -0.00000000       0.00000000       0.51136193
+C         -0.00000000       0.00000000       2.78576543
+H         -0.00000000       0.00000000       3.85017859
+units angstrom
+""")
+
+GEOS['%s-%s-dimer' % (dbse, '13')] = qcdb.Molecule("""
+0 1
+C          0.00000000      -0.59662248       1.58722206
+C          0.00000000       0.68258238       1.20494642
+H          0.92312147       1.22423658       1.04062463
+H         -0.92312147       1.22423658       1.04062463
+H         -0.92388993      -1.13738548       1.75121281
+H          0.92388993      -1.13738548       1.75121281
+--
+0 1
+N          0.00000000      -0.00401379      -2.31096701
+H         -0.81122549      -0.45983060      -2.71043881
+H          0.00000000      -0.22249432      -1.32128161
+H          0.81122549      -0.45983060      -2.71043881
+units angstrom
+""")
+
+GEOS['%s-%s-dimer' % (dbse, '14')] = qcdb.Molecule("""
+0 1
+H          0.92444510      -1.23172221      -1.90619313
+H         -0.92444510      -1.23172221      -1.90619313
+H         -0.92444510       1.23172221      -1.90619313
+H          0.92444510       1.23172221      -1.90619313
+C          0.00000000       0.66728778      -1.90556520
+C          0.00000000      -0.66728778      -1.90556520
+--
+0 1
+H         -0.00000000       1.23344948       2.82931792
+H          0.00000000       1.22547148       0.97776199
+H         -0.00000000      -1.22547148       0.97776199
+H         -0.00000000      -1.23344948       2.82931792
+C         -0.00000000      -0.66711698       1.90601042
+C         -0.00000000       0.66711698       1.90601042
+units angstrom
+""")
+
+GEOS['%s-%s-dimer' % (dbse, '15')] = qcdb.Molecule("""
+0 1
+C          0.00000000       0.64634385      -1.60849815
+C          0.00000000      -0.67914355      -1.45381675
+H         -0.92399961      -1.24016223      -1.38784883
+H          0.92399961      -1.24016223      -1.38784883
+H          0.92403607       1.20737602      -1.67357285
+H         -0.92403607       1.20737602      -1.67357285
+--
+0 1
+H          0.00000000       0.08295411       1.59016711
+C          0.00000000       0.02871509       2.67711785
+H          0.88825459       0.52261990       3.06664029
+H         -0.88825459       0.52261990       3.06664029
+H          0.00000000      -1.01394800       2.98955227
+units angstrom
+""")
+
+GEOS['%s-%s-dimer' % (dbse, '16')] = qcdb.Molecule("""
+0 1
+C          0.00346000       0.00000000       1.38045208
+H          0.84849635       0.00000000       0.68958651
+H          0.39513333       0.00000000       2.39584935
+H         -0.60268447      -0.88994299       1.22482674
+H         -0.60268447       0.88994299       1.22482674
+--
+0 1
+B         -0.00555317       0.00000000      -1.59887976
+H          0.58455128      -1.03051800      -1.67949525
+H          0.58455128       1.03051800      -1.67949525
+H         -1.18903148       0.00000000      -1.47677217
+units angstrom
+""")
+
+GEOS['%s-%s-dimer' % (dbse, '17')] = qcdb.Molecule("""
+0 1
+C          0.00000000      -0.06374421       2.42054090
+H          0.00000000       1.02169396       2.34238038
+H          0.88828307      -0.46131911       1.93307194
+H         -0.88828307      -0.46131911       1.93307194
+H          0.00000000      -0.35363606       3.46945195
+--
+0 1
+C          0.00000000       0.78133572      -1.13543912
+H          0.00000000       1.37465349      -2.05114442
+H         -0.88043002       1.06310554      -0.55580918
+C          0.00000000      -0.71332890      -1.44723686
+H          0.88043002       1.06310554      -0.55580918
+H          0.00000000      -1.30641812      -0.53140693
+H         -0.88100343      -0.99533072      -2.02587154
+H          0.88100343      -0.99533072      -2.02587154
+units angstrom
+""")
+
+GEOS['%s-%s-dimer' % (dbse, '18')] = qcdb.Molecule("""
+0 1
+C         -0.00000000       0.00000000      -2.85810471
+H          0.39304720      -0.94712229      -2.49369739
+H          0.62370837       0.81395000      -2.49369739
+H         -1.01675556       0.13317229      -2.49369739
+H          0.00000000      -0.00000000      -3.94634214
+--
+0 1
+C          0.00000000      -0.00000000       0.76143405
+C         -0.00000000      -0.00000000       2.28821715
+H         -0.61711193      -0.80824397       0.36571527
+H         -0.39140385       0.93855659       0.36571527
+H          1.00851577      -0.13031262       0.36571527
+H         -1.00891703       0.13031295       2.68258296
+H          0.39160418      -0.93890425       2.68258296
+H          0.61731284       0.80859130       2.68258296
+units angstrom
+""")
+
+GEOS['%s-%s-dimer' % (dbse, '19')] = qcdb.Molecule("""
+0 1
+C         -0.00000000       0.00000000       1.81901457
+H          0.51274115       0.88809373       1.45476743
+H          0.51274115      -0.88809373       1.45476743
+H         -1.02548230       0.00000000       1.45476743
+H          0.00000000      -0.00000000       2.90722072
+--
+0 1
+C          0.00000000      -0.00000000      -1.81901457
+H         -0.00000000       0.00000000      -2.90722072
+H         -0.51274115       0.88809373      -1.45476743
+H         -0.51274115      -0.88809373      -1.45476743
+H          1.02548230      -0.00000000      -1.45476743
+units angstrom
+""")
+
+GEOS['%s-%s-dimer' % (dbse, '20')] = qcdb.Molecule("""
+0 1
+C         -0.00000000       0.00000000      -2.62458428
+H          0.51286762       0.88831278      -2.26110195
+H          0.51286762      -0.88831278      -2.26110195
+H         -0.00000000       0.00000000      -3.71273928
+H         -1.02573525       0.00000000      -2.26110195
+--
+0 1
+AR        -0.00000000       0.00000000       1.05395172
+units angstrom
+""")
+
+GEOS['%s-%s-dimer' % (dbse, '21')] = qcdb.Molecule("""
+0 1
+C          0.00000000       0.66718073      -2.29024825
+C          0.00000000      -0.66718073      -2.29024825
+H         -0.92400768       1.23202333      -2.28975239
+H          0.92400768       1.23202333      -2.28975239
+H         -0.92400768      -1.23202333      -2.28975239
+H          0.92400768      -1.23202333      -2.28975239
+--
+0 1
+AR        -0.00000000       0.00000000       1.60829261
+units angstrom
+""")
+
+GEOS['%s-%s-dimer' % (dbse, '22')] = qcdb.Molecule("""
+0 1
+H         -0.92396100       1.23195600      -1.68478123
+H          0.92396100       1.23195600      -1.68478123
+H          0.92396100      -1.23195600      -1.68478123
+H         -0.92396100      -1.23195600      -1.68478123
+C          0.00000000       0.66717600      -1.68478123
+C          0.00000000      -0.66717600      -1.68478123
+--
+0 1
+H         -0.00000000      -1.66786500       1.81521877
+H         -0.00000000       1.66786500       1.81521877
+C         -0.00000000      -0.60339700       1.81521877
+C         -0.00000000       0.60339700       1.81521877
+units angstrom
+""")
+
+GEOS['%s-%s-dimer' % (dbse, '23')] = qcdb.Molecule("""
+0 1
+H         -0.92396100       1.23195600      -1.75000000
+H          0.92396100       1.23195600      -1.75000000
+H          0.92396100      -1.23195600      -1.75000000
+H         -0.92396100      -1.23195600      -1.75000000
+C          0.00000000       0.66717600      -1.75000000
+C         -0.00000000      -0.66717600      -1.75000000
+--
+0 1
+H         -0.92396100       1.23195600       1.75000000
+H          0.92396100       1.23195600       1.75000000
+H          0.92396100      -1.23195600       1.75000000
+H         -0.92396100      -1.23195600       1.75000000
+C          0.00000000       0.66717600       1.75000000
+C         -0.00000000      -0.66717600       1.75000000
+units angstrom
+""")
+
+GEOS['%s-%s-dimer' % (dbse, '24')] = qcdb.Molecule("""
+0 1
+H         -0.00000000      -1.66786500      -1.75000000
+H          0.00000000       1.66786500      -1.75000000
+C         -0.00000000      -0.60339700      -1.75000000
+C          0.00000000       0.60339700      -1.75000000
+--
+0 1
+H         -0.00000000      -1.66786500       1.75000000
+H          0.00000000       1.66786500       1.75000000
+C         -0.00000000      -0.60339700       1.75000000
+C          0.00000000       0.60339700       1.75000000
+units angstrom
+""")
+
+
+# <<< Derived Geometry Strings >>>
+for rxn in HRXN:
+    GEOS['%s-%s-monoA-unCP' % (dbse, rxn)] = GEOS['%s-%s-dimer' % (dbse, rxn)].extract_fragments(1)
+    GEOS['%s-%s-monoB-unCP' % (dbse, rxn)] = GEOS['%s-%s-dimer' % (dbse, rxn)].extract_fragments(2)
+    GEOS['%s-%s-monoA-CP'   % (dbse, rxn)] = GEOS['%s-%s-dimer' % (dbse, rxn)].extract_fragments(1, 2)
+    GEOS['%s-%s-monoB-CP'   % (dbse, rxn)] = GEOS['%s-%s-dimer' % (dbse, rxn)].extract_fragments(2, 1)
diff -Naur psi4-1.2.1/psi4/share/psi4/databases/CHB15.py psi4-1.2.1_changed/psi4/share/psi4/databases/CHB15.py
--- psi4-1.2.1/psi4/share/psi4/databases/CHB15.py	1970-01-01 01:00:00.000000000 +0100
+++ psi4-1.2.1_changed/psi4/share/psi4/databases/CHB15.py	2020-11-18 11:59:18.474886526 +0100
@@ -0,0 +1,517 @@
+#
+# @BEGIN LICENSE
+#
+# Psi4: an open-source quantum chemistry software package
+#
+# Copyright (c) 2007-2018 The Psi4 Developers.
+#
+# The copyrights for code used from other parties are included in
+# the corresponding files.
+#
+# This file is part of Psi4.
+#
+# Psi4 is free software; you can redistribute it and/or modify
+# it under the terms of the GNU Lesser General Public License as published by
+# the Free Software Foundation, version 3.
+#
+# Psi4 is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU Lesser General Public License for more details.
+#
+# You should have received a copy of the GNU Lesser General Public License along
+# with Psi4; if not, write to the Free Software Foundation, Inc.,
+# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
+#
+# ------------------------------------------------
+# Author of this file: Bartosz Błasiak
+#                      Gundelfingen, 05 Aug 2020
+# ------------------------------------------------
+#
+# @END LICENSE
+#
+
+"""
+| Database of interaction energies for small charged hydrogen bonded complexes.
+| Geometries from <Reference>.
+| Reference interaction energies from Rezac and Hobza, JCTC (in press).
+| Ref.: J. Rezac, P. Hobza, J. Chem. Theory Comput. 2012, 8, 141-151
+
+
+- **cp**  ``'off'`` <erase this comment and after unless on is a valid option> || ``'on'``
+
+- **rlxd** ``'off'`` <erase this comment and after unless on is valid option> || ``'on'``
+
+
+- **benchmark**
+
+  - ``'<benchmark_name>'`` <Reference>.
+  - |dl| ``'<default_benchmark_name>'`` |dr| <Reference>.
+
+- **subset**
+
+  - ``'all'`` all 15 molecules in the database
+
+"""
+import re
+import qcdb
+
+# <<< CHB15 Database Module >>>
+dbse = 'CHB15'
+
+# <<< Database Members >>>
+HRXN = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
+HRXN_SM = []
+HRXN_LG = []
+
+# <<< Chemical Systems Involved >>>
+RXNM = {}     # reaction matrix of reagent contributions per reaction
+ACTV = {}     # order of active reagents per reaction
+ACTV_CP = {}  # order of active reagents per counterpoise-corrected reaction
+ACTV_SA = {}  # order of active reagents for non-supermolecular calculations
+for rxn in HRXN:
+
+    RXNM[   '%s-%s' % (dbse, rxn)] = {'%s-%s-dimer'      % (dbse, rxn) : +1,
+                                      '%s-%s-monoA-CP'   % (dbse, rxn) : -1,
+                                      '%s-%s-monoB-CP'   % (dbse, rxn) : -1,
+                                      '%s-%s-monoA-unCP' % (dbse, rxn) : -1,
+                                      '%s-%s-monoB-unCP' % (dbse, rxn) : -1 }
+
+    ACTV_SA['%s-%s' % (dbse, rxn)] = ['%s-%s-dimer'      % (dbse, rxn) ]
+
+    ACTV_CP['%s-%s' % (dbse, rxn)] = ['%s-%s-dimer'      % (dbse, rxn),
+                                      '%s-%s-monoA-CP'   % (dbse, rxn),
+                                      '%s-%s-monoB-CP'   % (dbse, rxn) ]
+
+    ACTV[   '%s-%s' % (dbse, rxn)] = ['%s-%s-dimer'      % (dbse, rxn),
+                                      '%s-%s-monoA-unCP' % (dbse, rxn),
+                                      '%s-%s-monoB-unCP' % (dbse, rxn) ]
+
+# <<< Reference Values [kcal/mol] from Rezac and Hobza dx.doi.org/10.1021/ct400057w >>>
+BIND = {}
+BIND['%s-%s'            % (dbse, 1  )] =  0.000 
+BIND['%s-%s'            % (dbse, 2  )] =  0.000 
+BIND['%s-%s'            % (dbse, 3  )] =  0.000 
+BIND['%s-%s'            % (dbse, 4  )] =  0.000 
+BIND['%s-%s'            % (dbse, 5  )] =  0.000 
+BIND['%s-%s'            % (dbse, 6  )] =  0.000 
+BIND['%s-%s'            % (dbse, 7  )] =  0.000 
+BIND['%s-%s'            % (dbse, 8  )] =  0.000 
+BIND['%s-%s'            % (dbse, 9  )] =  0.000 
+BIND['%s-%s'            % (dbse, 10 )] =  0.000 
+BIND['%s-%s'            % (dbse, 11 )] =  0.000 
+BIND['%s-%s'            % (dbse, 12 )] =  0.000 
+BIND['%s-%s'            % (dbse, 13 )] =  0.000 
+BIND['%s-%s'            % (dbse, 14 )] =  0.000 
+BIND['%s-%s'            % (dbse, 15 )] =  0.000 
+
+# <<< Comment Lines >>>
+names = ["carboxyl_mNH2",         # 1
+         "carboxyl_mOH",          # 2
+         "carboxyl_wat",          # 3
+         "gua_fmdh",              # 4              
+         "gua_mNH2",              # 5 
+         "gua_mOH",               # 6
+         "gua_wat",               # 7
+         "hip_fmdh",              # 8
+         "hip_mNH2",              # 9
+         "hip_mOH",               # 10
+         "hip_wat",               # 11
+         "mNH3_fmdh",             # 12
+         "mNH3_mNH2",             # 13
+         "mNH3_mOH",              # 14
+         "mNH3_wat"]              # 15
+
+TAGL = {}
+for i, name in enumerate(names):
+    TAGL['%s-%s'            % (dbse, i+1)] = """ %s """ % name
+    TAGL['%s-%s-dimer'      % (dbse, i+1)] = """ Dimer %s """ % name
+    TAGL['%s-%s-monoA-CP'   % (dbse, i+1)] = """ Monomer A %s """ % name 
+    TAGL['%s-%s-monoB-CP'   % (dbse, i+1)] = """ Monomer B %s """ % name
+    TAGL['%s-%s-monoA-unCP' % (dbse, i+1)] = """ Monomer A %s """ % name
+    TAGL['%s-%s-monoB-unCP' % (dbse, i+1)] = """ Monomer B %s """ % name
+
+# <<< Geometry Specification Strings >>>
+GEOS = {}
+
+# carboxyl_mNH2
+GEOS['%s-%s-dimer' % (dbse, '1')] = qcdb.Molecule("""
+-1 1
+C   -1.067681101  -0.271098200   0.098425590    
+C    0.361871421   0.290569279  -0.103737259    
+O    1.279845864  -0.562993045  -0.089531722    
+O    0.451018532   1.538347265  -0.258903660    
+H   -1.274226455  -1.017247821  -0.669620680    
+H   -1.122005113  -0.781585539   1.060825043    
+H   -1.819051732   0.515321513   0.058342297    
+--
+0 1
+H    2.358591571   2.032036918  -0.577059564    
+N    3.325234668   2.378226272  -0.618915071    
+C    4.203764407   1.272238900  -0.244130768    
+H    5.247634052   1.596828130  -0.264891127    
+H    3.997944581   0.831075775   0.736038541    
+H    4.088828419   0.471128339  -0.970243143    
+H    3.366565887   3.073767217   0.116943522  
+units angstrom
+symmetry c1
+no_reorient
+no_com
+""")
+
+# carboxyl_mOH
+GEOS['%s-%s-dimer' % (dbse, '2')] = qcdb.Molecule("""
+-1 1
+C   -1.006215463  -0.203566404   0.039323585    
+C    0.487100228   0.185923820  -0.030061282    
+O    1.301564189  -0.757785383   0.052857808    
+O    0.724973696   1.422331940  -0.159634962    
+H   -1.223648142  -0.940991754  -0.733559633    
+H   -1.208099576  -0.678638500   0.999935449    
+H   -1.654410613   0.661570766  -0.082684221    
+--
+0 1
+H    2.323552151   1.971306366  -0.246411344    
+O    3.242038147   2.349020688  -0.304495292    
+C    4.120013665   1.257459426  -0.234121540    
+H    5.142912972   1.638285367  -0.294028876    
+H    4.022512629   0.692111931   0.697386417    
+H    3.976696841   0.542589358  -1.049974871  
+units angstrom
+symmetry c1
+no_reorient
+no_com
+""")
+
+# carboxyl_wat
+GEOS['%s-%s-dimer' % (dbse, '3')] = qcdb.Molecule("""
+-1 1
+C   -0.808438821  -0.243062083   0.038574485    
+C    0.533554652   0.513743610  -0.070281243    
+O    1.560611869  -0.214420190  -0.027568739    
+O    0.465298866   1.764998179  -0.183236969    
+H   -0.854283812  -1.014973034  -0.729785233    
+H   -1.656064871   0.431570596  -0.062379061    
+H   -0.857515936  -0.748947615   1.003461116    
+--
+0 1
+H    2.420729014   2.348323562  -0.279518048    
+O    3.332761822   2.015770751  -0.268681517    
+H    3.075886493   1.082062820  -0.178457540  
+units angstrom
+symmetry c1
+no_reorient
+no_com
+""")
+
+# gua_fmdh
+GEOS['%s-%s-dimer' % (dbse, '4')] = qcdb.Molecule("""
+1 1
+C   -0.105081656   0.282413741   0.022074441    
+N   -0.785227591  -0.820652291  -0.288990507    
+N   -0.745585479   1.421570007   0.253246903    
+N    1.219250263   0.252146159   0.103458752    
+H   -1.744037401   1.479987848   0.172685895    
+H    1.727462291  -0.601259621  -0.038822645    
+H    1.721470076   1.097144758   0.339497536  
+H   -0.216089211   2.249292326   0.491002112    
+H   -1.787472355  -0.815092404  -0.340300985    
+H   -0.312365218  -1.684834579  -0.480883846    
+--
+0 1
+O    1.602569103   3.050868682   0.808678982    
+C    2.224226383   4.058749214   1.099297255    
+H    3.315952442   4.050092152   1.175259403    
+H    1.711178461   5.005655912   1.293917723  
+units angstrom
+symmetry c1
+no_reorient
+no_com
+""")
+
+# gua_mNH2
+GEOS['%s-%s-dimer' % (dbse, '5')] = qcdb.Molecule("""
+1 1
+C   -0.022632781   0.158889311  -0.003491152    
+N   -1.034258337  -0.697533791   0.152948303    
+N   -0.072073363   1.381821873   0.487979803    
+N    1.062328053  -0.233142965  -0.675554069    
+H   -0.920522620   1.713004355   0.912119915    
+H    1.204431006  -1.196369662  -0.918176231    
+H    1.826844953   0.406007458  -0.798617863    
+H   -1.049138495  -1.576370701  -0.331757120    
+H    0.758041219   2.014066447   0.417577832    
+H   -1.851470832  -0.438033553   0.674514141    
+--
+0 1
+N    2.136801513   3.149948876   0.362090548    
+C    1.629375355   4.251371630   1.207893294    
+H    2.372571515   3.530476168  -0.548121952    
+H    2.329470033   5.077982821   1.310170076    
+H    0.708278821   4.636038784   0.777439086    
+H    1.407495363   3.866068655   2.199747335    
+H    3.019205595   2.833474292   0.749409056  
+units angstrom
+symmetry c1
+no_reorient
+no_com
+""")
+
+# gua_mOH
+GEOS['%s-%s-dimer' % (dbse, '6')] = qcdb.Molecule("""
+1 1
+C   -0.081972325   0.353680588   0.028076102    
+N   -0.781386068  -0.780045332  -0.011075941    
+N   -0.700530775   1.527575229   0.063558364    
+N    1.245079059   0.328413353   0.036872021    
+H   -1.701484618   1.589975232   0.033190952    
+H    1.750062669  -0.538343991   0.016503262    
+H    1.745755146   1.209639567   0.055791883    
+H   -0.322300090  -1.672024252  -0.041041434    
+H   -0.137793105   2.370660847   0.078458926    
+H   -1.784932170  -0.770876464  -0.005828173    
+--
+0 1
+O    1.662952247   3.184748790   0.158770895    
+C    2.081912462   3.852481778   1.365617693    
+H    1.981926316   3.707541256  -0.584132688    
+H    3.165794687   3.907782802   1.424027822    
+H    1.658082817   4.851495416   1.425337117    
+H    1.711514317   3.260194559   2.195510760  
+units angstrom
+symmetry c1
+no_reorient
+no_com
+""")
+
+# gua_wat
+GEOS['%s-%s-dimer' % (dbse, '7')] = qcdb.Molecule("""
+1 1
+C   -0.071100547   0.351296503   0.027408194    
+N   -0.894833573  -0.694824870  -0.016588211    
+N   -0.552894884   1.582189052   0.148368366    
+N    1.242556704   0.176740483  -0.048607484    
+H   -1.539110307   1.749324362   0.227945668    
+H    1.640248335  -0.737740076  -0.159997553    
+H    0.091723707   2.360878453   0.177288781    
+H   -0.541272484  -1.630581091  -0.099062272    
+H   -1.890242352  -0.573671076   0.026661967  
+H    1.848157063   0.985745123  -0.011055350    
+--
+0 1
+O    2.018670957   3.007993255   0.136861195    
+H    2.419466865   3.415761631   0.911181729    
+H    2.349723896   3.533314917  -0.598704323  
+units angstrom
+symmetry c1
+no_reorient
+no_com
+""")
+
+# hip_fmdh
+GEOS['%s-%s-dimer' % (dbse, '8')] = qcdb.Molecule("""
+1 1
+C    4.992080318   5.502206312   0.460294537    
+C    4.142932018   5.064052621   1.440422070    
+N    4.048348407   6.071858981   2.363217606    
+C    4.803200065   7.101898305   1.985225154    
+N    5.381732667   6.764409591   0.827845316    
+H    3.615689853   4.134288605   1.542678623    
+H    3.490538328   6.073564561   3.229990672    
+H    5.336891356   5.028852818  -0.439807530    
+H    6.011779025   7.360007188   0.309997930    
+H    4.923000524   8.029870783   2.513374890    
+--
+0 1
+O    2.771227219   6.581015579   4.736846747    
+C    2.031585673   6.290675285   5.660647292    
+H    1.521615021   5.322491983   5.706176359    
+H    1.853805525   6.994950386   6.478785336  
+units angstrom
+symmetry c1
+no_reorient
+no_com
+""")
+
+# hip_mNH2 
+GEOS['%s-%s-dimer' % (dbse, '9')] = qcdb.Molecule("""
+1 1 
+C    4.999742982   5.656478915   0.500699101    
+C    4.164862142   5.017473257   1.379027829    
+N    3.939509304   5.868794127   2.428963225    
+C    4.608365297   6.999915738   2.218084680    
+N    5.256490848   6.884805521   1.050371362    
+H    3.728431744   4.037328478   1.328268100    
+H    3.316944545   5.657789713   3.312404450    
+H    4.631794200   7.858375587   2.863794077    
+H    5.416541405   5.343987339  -0.438462413    
+H    5.844006700   7.599873278   0.647217331    
+--
+0 1
+N    2.360413089   5.321240076   4.545257334    
+H    2.684644328   4.503728539   5.051765441    
+C    0.977807410   5.081780014   4.078478631    
+H    0.620679571   5.964248669   3.555286665    
+H    0.976672511   4.249143917   3.380678467    
+H    0.289084969   4.854400601   4.888818694    
+H    2.348465955   6.064511230   5.236002027  
+units angstrom
+symmetry c1
+no_reorient
+no_com
+""")
+
+# hip_mOH
+GEOS['%s-%s-dimer' % (dbse, '10')] = qcdb.Molecule("""
+1 1
+C    5.149867812   5.781166695   0.454915895    
+C    4.310331875   4.996348260   1.199035769    
+N    3.949484344   5.726378549   2.300513163    
+C    4.535679925   6.921018621   2.255243186    
+N    5.268418880   6.964890399   1.136262329    
+H    3.954151378   3.997818400   1.027940865    
+H    3.315215265   5.411421924   3.069161162    
+H    4.439502186   7.706358470   2.982065199    
+H    5.654340822   5.595095678  -0.474727925    
+H    5.822762606   7.757809794   0.847037700    
+--
+0 1
+O    2.287274462   4.997059418   4.277698675    
+H    2.537181293   4.540754240   5.086349443    
+C    0.852612058   5.085444264   4.230014684    
+H    0.600364555   5.592921938   3.305190746  
+H    0.401774603   4.096692297   4.227095080    
+H    0.472893936   5.665090054   5.066954029  
+units angstrom
+symmetry c1
+no_reorient
+no_com
+""")
+
+# hip_wat 
+GEOS['%s-%s-dimer' % (dbse, '11')] = qcdb.Molecule("""
+1 1
+C    5.082425230   5.694110213   0.467816815    
+C    4.219648710   4.994294021   1.267596178    
+N    3.928118405   5.797286100   2.338420520    
+C    4.577383461   6.954219633   2.222006001    
+N    5.282709241   6.901057178   1.086603578    
+H    3.803644392   4.010622797   1.155484436    
+H    5.553083545   5.435055031  -0.462004958    
+H    4.542504567   7.778104465   2.910688070    
+H    5.872413711   7.646727047   0.745823201    
+H    3.300294311   5.554620966   3.125722341    
+--
+0 1
+O    2.273799414   5.176654089   4.427454544    
+H    2.504832168   4.716982810   5.239367142    
+H    1.322383844   5.303900651   4.477382132  
+units angstrom
+symmetry c1
+no_reorient
+no_com
+""")
+
+# mNH3_fmdh
+GEOS['%s-%s-dimer' % (dbse, '12')] = qcdb.Molecule("""
+1 1
+C    0.687364580  -0.177705402   0.322869765    
+N   -0.735021639   0.201185335   0.055690011    
+H   -1.380118913  -0.452570111   0.496181898    
+H   -0.945342769   1.128728697   0.420157622    
+H   -0.914689681   0.199140171  -0.968987117    
+H    0.856655158  -1.164072485  -0.091484742    
+H    1.326952365   0.545866029  -0.167734951    
+H    0.859676716  -0.176826300   1.392473464    
+--
+0 1
+O   -0.688387552  -0.006827961  -2.671205700    
+C   -1.151543972   0.108573219  -3.793715602    
+H   -0.570905471  -0.192905158  -4.669883563    
+H   -2.154311482   0.514294330  -3.962474775  
+units angstrom
+symmetry c1
+no_reorient
+no_com
+""")
+
+# mNH3_mNH2
+GEOS['%s-%s-dimer' % (dbse, '13')] = qcdb.Molecule("""
+1 1
+C    0.744768151  -0.082282053  -0.019173554    
+N   -0.728438635   0.112146543   0.091161198    
+H   -1.127753599  -0.526162012   0.776374088    
+H   -0.947980520   1.055774181   0.403402411    
+H   -1.224663286  -0.064847586  -0.881903869    
+H    0.932732220  -1.093480816  -0.362003654    
+H    1.212925665   0.074803757   0.945875964    
+H    1.132071711   0.628965038  -0.739788431    
+--
+0 1
+N   -1.869193765  -0.320933795  -2.339816000    
+C   -1.024136456   0.203286382  -3.437481685    
+H   -2.039293972  -1.308126579  -2.505594757    
+H   -1.464672792   0.048252935  -4.419381823    
+H   -0.870277928   1.269094010  -3.293172401    
+H   -0.057160632  -0.291250085  -3.411849851    
+H   -2.786883617   0.109107046  -2.404975756  
+units angstrom
+symmetry c1
+no_reorient
+no_com
+""")
+
+# mNH3_mOH
+GEOS['%s-%s-dimer' % (dbse, '14')] = qcdb.Molecule("""
+1 1
+C    0.687041485  -0.021348442   0.158244910    
+N   -0.796548184   0.105617965   0.039344613    
+H   -1.270243847  -0.509648168   0.698373151    
+H   -1.103958172   1.055158108   0.241676877  
+H   -1.110658397  -0.147584181  -0.934324277    
+H    0.958993985  -1.044759456  -0.070634654    
+H    0.990678267   0.235706496   1.166097459    
+H    1.144634560   0.652587758  -0.556167114  
+--
+0 1  
+O   -1.407504631  -0.585095302  -2.489010770    
+C   -1.068005632   0.161392585  -3.674026593    
+H   -1.997797922  -1.300085292  -2.745755652    
+H   -1.953332227   0.608017004  -4.117664846    
+H   -0.388154864   0.949189504  -3.367554340    
+H   -0.566848884  -0.475482436  -4.397112815  
+units angstrom
+symmetry c1
+no_reorient
+no_com
+""")
+
+# mNH3_wat
+GEOS['%s-%s-dimer' % (dbse, '15')] = qcdb.Molecule("""
+1 1
+C    0.729910353  -0.067791535   0.057095373    
+N   -0.757044007   0.087897962   0.041272775    
+H   -1.200812907  -0.569235636   0.680770653    
+H   -1.033508938   1.024135700   0.332440612    
+H   -1.137879313  -0.081658460  -0.916293500    
+H    1.155255605   0.657321778  -0.626319371    
+H    1.094665015   0.102560205   1.062985612    
+H    0.969275613  -1.072917859  -0.268483642    
+--
+0 1
+O   -1.621902384  -0.405938406  -2.518774555    
+H   -1.424849813   0.103890660  -3.310162799    
+H   -2.253608383  -1.070520461  -2.809529101  
+units angstrom
+symmetry c1
+no_reorient
+no_com
+""")
+
+
+# <<< Derived Geometry Strings >>>
+for rxn in HRXN:
+    GEOS['%s-%s-monoA-unCP' % (dbse, rxn)] = GEOS['%s-%s-dimer' % (dbse, rxn)].extract_fragments(1)
+    GEOS['%s-%s-monoB-unCP' % (dbse, rxn)] = GEOS['%s-%s-dimer' % (dbse, rxn)].extract_fragments(2)
+    GEOS['%s-%s-monoA-CP'   % (dbse, rxn)] = GEOS['%s-%s-dimer' % (dbse, rxn)].extract_fragments(1, 2)
+    GEOS['%s-%s-monoB-CP'   % (dbse, rxn)] = GEOS['%s-%s-dimer' % (dbse, rxn)].extract_fragments(2, 1)
diff -Naur psi4-1.2.1/psi4/src/psi4/ccenergy/ccwave.h psi4-1.2.1_changed/psi4/src/psi4/ccenergy/ccwave.h
--- psi4-1.2.1/psi4/src/psi4/ccenergy/ccwave.h	2018-07-25 04:11:25.000000000 +0200
+++ psi4-1.2.1_changed/psi4/src/psi4/ccenergy/ccwave.h	2020-11-18 11:59:18.526886846 +0100
@@ -33,6 +33,9 @@
 #include "MOInfo.h"
 #include "Params.h"
 #include "Local.h"
+#include "psi4/pragma.h"
+#include "psi4/psi4-dec.h"
+
 
 namespace psi {
 class Options;
@@ -44,7 +47,8 @@
 
 namespace psi { namespace ccenergy {
 
-class CCEnergyWavefunction : public Wavefunction
+
+class PSI_API CCEnergyWavefunction : public Wavefunction
 {
 public:
     CCEnergyWavefunction(std::shared_ptr<Wavefunction> reference_wavefunction, Options &options);
diff -Naur psi4-1.2.1/psi4/src/psi4/libciomr/libciomr.h psi4-1.2.1_changed/psi4/src/psi4/libciomr/libciomr.h
--- psi4-1.2.1/psi4/src/psi4/libciomr/libciomr.h	2018-07-25 04:11:25.000000000 +0200
+++ psi4-1.2.1_changed/psi4/src/psi4/libciomr/libciomr.h	2020-11-18 11:59:18.538886919 +0100
@@ -58,7 +58,7 @@
 
 void flin(double **a,double *b,int in,int im,double *det);
 void free_matrix(double **array, size_t size) ;
-double * init_array(size_t size) ;
+PSI_API double * init_array(size_t size) ;
 double ** init_matrix(size_t rows, size_t cols) ;
 
 void lubksb(double **a,int n,int *indx,double *b);
diff -Naur psi4-1.2.1/psi4/src/psi4/libcubeprop/csg.h psi4-1.2.1_changed/psi4/src/psi4/libcubeprop/csg.h
--- psi4-1.2.1/psi4/src/psi4/libcubeprop/csg.h	2018-07-25 04:11:25.000000000 +0200
+++ psi4-1.2.1_changed/psi4/src/psi4/libcubeprop/csg.h	2020-11-18 11:59:18.538886919 +0100
@@ -41,7 +41,7 @@
 class RKSFunctions;
 class BlockOPoints;
 
-class CubicScalarGrid {
+class PSI_API CubicScalarGrid {
    protected:
     // => Input Specification <= //
 
diff -Naur psi4-1.2.1/psi4/src/psi4/libdpd/dpd.h psi4-1.2.1_changed/psi4/src/psi4/libdpd/dpd.h
--- psi4-1.2.1/psi4/src/psi4/libdpd/dpd.h	2018-07-25 04:11:25.000000000 +0200
+++ psi4-1.2.1_changed/psi4/src/psi4/libdpd/dpd.h	2020-11-18 11:59:18.542886944 +0100
@@ -525,12 +525,12 @@
 extern dpd_gbl dpd_main;
 extern PSI_API DPD* global_dpd_;
 extern PSI_API int dpd_default;
-extern DPD* dpd_list[2];
+extern PSI_API DPD* dpd_list[2];
 extern PSI_API int dpd_set_default(int dpd_num);
 extern int dpd_init(int dpd_num, int nirreps, long int memory, int cachetype,
             int *cachefiles, int **cachelist, dpd_file4_cache_entry *priority,
             int num_subspaces, std::vector<int*> &spaceArrays);
-extern int dpd_close(int dpd_num);
+extern int PSI_API dpd_close(int dpd_num);
 extern long int PSI_API dpd_memfree(void);
 extern void dpd_memset(long int memory);
 
diff -Naur psi4-1.2.1/psi4/src/psi4/libdpd/dpdmospace.h psi4-1.2.1_changed/psi4/src/psi4/libdpd/dpdmospace.h
--- psi4-1.2.1/psi4/src/psi4/libdpd/dpdmospace.h	2018-07-25 04:11:25.000000000 +0200
+++ psi4-1.2.1_changed/psi4/src/psi4/libdpd/dpdmospace.h	2020-11-18 11:59:18.542886944 +0100
@@ -38,7 +38,7 @@
 
 std::vector<std::string> dpd_split(const std::string &indices);
 
-class DPDMOSpace {
+class PSI_API DPDMOSpace {
   protected:
     // name of the space
     char label_;
diff -Naur psi4-1.2.1/psi4/src/psi4/libfunctional/superfunctional.h psi4-1.2.1_changed/psi4/src/psi4/libfunctional/superfunctional.h
--- psi4-1.2.1/psi4/src/psi4/libfunctional/superfunctional.h	2018-07-25 04:11:25.000000000 +0200
+++ psi4-1.2.1_changed/psi4/src/psi4/libfunctional/superfunctional.h	2020-11-18 11:59:18.542886944 +0100
@@ -59,7 +59,7 @@
  * E(-D) is an empirical dispersion correction of some form
  *
  **/
-class SuperFunctional {
+class PSI_API SuperFunctional {
 
 protected:
 
diff -Naur psi4-1.2.1/psi4/src/psi4/libiwl/iwl.h psi4-1.2.1_changed/psi4/src/psi4/libiwl/iwl.h
--- psi4-1.2.1/psi4/src/psi4/libiwl/iwl.h	2018-07-25 04:11:25.000000000 +0200
+++ psi4-1.2.1_changed/psi4/src/psi4/libiwl/iwl.h	2020-11-18 11:59:18.542886944 +0100
@@ -61,7 +61,7 @@
 void iwl_buf_fetch(struct iwlbuf *Buf);
 void iwl_buf_put(struct iwlbuf *Buf);
 
-int iwl_rdone(int itap, const char *label, double *ints, int ntri, int erase,
+int PSI_API iwl_rdone(int itap, const char *label, double *ints, int ntri, int erase,
               int printflg, std::string out);
 
 void iwl_buf_init(struct iwlbuf *Buf, int intape, double cutoff,
diff -Naur psi4-1.2.1/psi4/src/psi4/libmints/efpmultipolepotential.h psi4-1.2.1_changed/psi4/src/psi4/libmints/efpmultipolepotential.h
--- psi4-1.2.1/psi4/src/psi4/libmints/efpmultipolepotential.h	2018-07-25 04:11:25.000000000 +0200
+++ psi4-1.2.1_changed/psi4/src/psi4/libmints/efpmultipolepotential.h	2020-11-18 11:59:18.546886969 +0100
@@ -80,7 +80,7 @@
  *     19    |      XYZ       |    6/15
  *
  */
-class EFPMultipolePotentialInt : public OneBodyAOInt
+class PSI_API EFPMultipolePotentialInt : public OneBodyAOInt
 {
     // OS Recursion for this type of potential integral
     ObaraSaikaTwoCenterEFPRecursion mvi_recur_;
diff -Naur psi4-1.2.1/psi4/src/psi4/libmints/fjt.h psi4-1.2.1_changed/psi4/src/psi4/libmints/fjt.h
--- psi4-1.2.1/psi4/src/psi4/libmints/fjt.h	2018-07-25 04:11:25.000000000 +0200
+++ psi4-1.2.1_changed/psi4/src/psi4/libmints/fjt.h	2020-11-18 11:59:18.546886969 +0100
@@ -61,7 +61,7 @@
 class CorrelationFactor;
 
 /// Evaluates the Boys function F_j(T)
-class Fjt {
+class PSI_API Fjt {
 public:
     Fjt();
     virtual ~Fjt();
@@ -76,7 +76,7 @@
 #define TAYLOR_INTERPOLATION_ORDER 6
 #define TAYLOR_INTERPOLATION_AND_RECURSION 0  // compute F_lmax(T) and then iterate down to F_0(T)? Else use interpolation only
 /// Uses Taylor interpolation of up to 8-th order to compute the Boys function
-class Taylor_Fjt : public Fjt {
+class PSI_API Taylor_Fjt : public Fjt {
     static double relative_zero_;
 public:
     static const int max_interp_order = 8;
diff -Naur psi4-1.2.1/psi4/src/psi4/libmints/gshell.h psi4-1.2.1_changed/psi4/src/psi4/libmints/gshell.h
--- psi4-1.2.1/psi4/src/psi4/libmints/gshell.h	2018-07-25 04:11:25.000000000 +0200
+++ psi4-1.2.1_changed/psi4/src/psi4/libmints/gshell.h	2020-11-18 11:59:18.546886969 +0100
@@ -32,6 +32,7 @@
 #include <cstdio>
 #include <vector>
 #include "psi4/libmints/vector3.h"
+#include "psi4/pragma.h"
 
 namespace psi {
 
@@ -59,7 +60,7 @@
  *         slower data structures, which are easier to construct. These are used to build the
  *         basis set, which builds more efficient pointer-based GaussianShell objects.
  */
-class ShellInfo
+class PSI_API ShellInfo
 {
 protected:
     /// Angular momentum
@@ -186,7 +187,7 @@
  *  \class GaussianShell
  *  \brief Gaussian orbital shell.
  */
-class GaussianShell
+class PSI_API GaussianShell
 {
 protected:
     /// Angular momentum
diff -Naur psi4-1.2.1/psi4/src/psi4/libmints/multipoles.h psi4-1.2.1_changed/psi4/src/psi4/libmints/multipoles.h
--- psi4-1.2.1/psi4/src/psi4/libmints/multipoles.h	2018-07-25 04:11:25.000000000 +0200
+++ psi4-1.2.1_changed/psi4/src/psi4/libmints/multipoles.h	2020-11-18 11:59:18.546886969 +0100
@@ -43,7 +43,7 @@
  *  \brief Computes arbitrary-order multipole integrals.
  *
  * Use an IntegralFactory to create this object. */
-class MultipoleInt : public OneBodyAOInt
+class PSI_API MultipoleInt : public OneBodyAOInt
 {
     //! Obara and Saika recursion object to be used.
     ObaraSaikaTwoCenterMIRecursion mi_recur_;
diff -Naur psi4-1.2.1/psi4/src/psi4/libmints/multipolesymmetry.h psi4-1.2.1_changed/psi4/src/psi4/libmints/multipolesymmetry.h
--- psi4-1.2.1/psi4/src/psi4/libmints/multipolesymmetry.h	2018-07-25 04:11:25.000000000 +0200
+++ psi4-1.2.1_changed/psi4/src/psi4/libmints/multipolesymmetry.h	2020-11-18 11:59:18.546886969 +0100
@@ -106,7 +106,7 @@
     std::vector<SharedMatrix > create_matrices(const std::string& basename);
 };
 
-class MultipoleSymmetry
+class PSI_API MultipoleSymmetry
 {
     // The order of the multipole (dipole=1, quadrupole=2, etc...)
     int order_;
diff -Naur psi4-1.2.1/psi4/src/psi4/libmints/oeprop.h psi4-1.2.1_changed/psi4/src/psi4/libmints/oeprop.h
--- psi4-1.2.1/psi4/src/psi4/libmints/oeprop.h	2018-07-25 04:11:25.000000000 +0200
+++ psi4-1.2.1_changed/psi4/src/psi4/libmints/oeprop.h	2020-11-18 11:59:18.546886969 +0100
@@ -35,6 +35,7 @@
 #include <string>
 
 #include "typedefs.h"
+#include "psi4/pragma.h"
 #include "psi4/libmints/vector3.h"
 
 namespace psi {
@@ -61,7 +62,7 @@
 *  wavefunction, substitutions may be made later, to use different orbitals
 *  or densities.
 */
-class Prop {
+class PSI_API Prop {
 
 protected:
     /// Print flag
@@ -230,7 +231,7 @@
 * The OEProp object, computes arbitrary expectation values (scalars)
 * analyses (typically vectors)
 **/
-class OEProp : public Prop {
+class PSI_API OEProp : public Prop {
 
 protected:
     /// Common initialization
diff -Naur psi4-1.2.1/psi4/src/psi4/libmints/onebody.h psi4-1.2.1_changed/psi4/src/psi4/libmints/onebody.h
--- psi4-1.2.1/psi4/src/psi4/libmints/onebody.h	2018-07-25 04:11:25.000000000 +0200
+++ psi4-1.2.1_changed/psi4/src/psi4/libmints/onebody.h	2020-11-18 11:59:18.546886969 +0100
@@ -52,7 +52,7 @@
  *  \class OneBodyInt
  *  \brief Basis class for all one-electron integrals.
  */
-class OneBodyAOInt
+class PSI_API OneBodyAOInt
 {
 protected:
     std::shared_ptr<BasisSet> bs1_;
diff -Naur psi4-1.2.1/psi4/src/psi4/libmints/potential.h psi4-1.2.1_changed/psi4/src/psi4/libmints/potential.h
--- psi4-1.2.1/psi4/src/psi4/libmints/potential.h	2018-07-25 04:11:25.000000000 +0200
+++ psi4-1.2.1_changed/psi4/src/psi4/libmints/potential.h	2020-11-18 11:59:18.546886969 +0100
@@ -47,7 +47,7 @@
  *  \brief Computes potential integrals.
  * Use an IntegralFactory to create this object.
  */
-class PotentialInt : public OneBodyAOInt
+class PSI_API PotentialInt : public OneBodyAOInt
 {
     /// Computes integrals between two shell objects.
     void compute_pair(const GaussianShell&, const GaussianShell&);
diff -Naur psi4-1.2.1/psi4/src/psi4/libqt/invert.cc psi4-1.2.1_changed/psi4/src/psi4/libqt/invert.cc
--- psi4-1.2.1/psi4/src/psi4/libqt/invert.cc	2018-07-25 04:11:25.000000000 +0200
+++ psi4-1.2.1_changed/psi4/src/psi4/libqt/invert.cc	2020-11-18 11:59:18.550886993 +0100
@@ -41,7 +41,7 @@
 #include "psi4/libpsi4util/PsiOutStream.h"
 namespace psi {
 
-#define SMALL_DET 1.0E-10
+#define SMALL_DET 1.0E-400
 
 /*!
 ** INVERT_MATRIX(): The function takes the inverse of a matrix using the
diff -Naur psi4-1.2.1/psi4/src/psi4/libscf_solver/hf.h psi4-1.2.1_changed/psi4/src/psi4/libscf_solver/hf.h
--- psi4-1.2.1/psi4/src/psi4/libscf_solver/hf.h	2018-07-25 04:11:25.000000000 +0200
+++ psi4-1.2.1_changed/psi4/src/psi4/libscf_solver/hf.h	2020-11-18 11:59:18.550886993 +0100
@@ -45,7 +45,7 @@
 class PSIO;
 namespace scf {
 
-class HF : public Wavefunction {
+class PSI_API HF : public Wavefunction {
 protected:
 
     /// The kinetic energy matrix
diff -Naur psi4-1.2.1/psi4/src/psi4/libscf_solver/rhf.h psi4-1.2.1_changed/psi4/src/psi4/libscf_solver/rhf.h
--- psi4-1.2.1/psi4/src/psi4/libscf_solver/rhf.h	2018-07-25 04:11:25.000000000 +0200
+++ psi4-1.2.1_changed/psi4/src/psi4/libscf_solver/rhf.h	2020-11-18 11:59:18.550886993 +0100
@@ -36,7 +36,7 @@
 
 namespace scf {
 
-class RHF : public HF {
+class PSI_API RHF : public HF {
 protected:
 
     // Temporary matrices
diff -Naur psi4-1.2.1/psi4/src/psi4/libscf_solver/rohf.h psi4-1.2.1_changed/psi4/src/psi4/libscf_solver/rohf.h
--- psi4-1.2.1/psi4/src/psi4/libscf_solver/rohf.h	2018-07-25 04:11:25.000000000 +0200
+++ psi4-1.2.1_changed/psi4/src/psi4/libscf_solver/rohf.h	2020-11-18 11:59:18.550886993 +0100
@@ -35,7 +35,7 @@
 
 namespace psi { namespace scf {
 
-class ROHF : public HF {
+class PSI_API ROHF : public HF {
 protected:
     SharedMatrix moFeff_;
     SharedMatrix soFeff_;
diff -Naur psi4-1.2.1/psi4/src/psi4/libtrans/integraltransform.cc psi4-1.2.1_changed/psi4/src/psi4/libtrans/integraltransform.cc
--- psi4-1.2.1/psi4/src/psi4/libtrans/integraltransform.cc	2018-07-25 04:11:25.000000000 +0200
+++ psi4-1.2.1_changed/psi4/src/psi4/libtrans/integraltransform.cc	2020-11-18 11:59:18.554887018 +0100
@@ -278,6 +278,7 @@
     cacheFiles_ = init_int_array(PSIO_MAXUNIT);
     cacheList_ = init_int_matrix(numIndexArrays, numIndexArrays);
     int currentActiveDPD = psi::dpd_default;
+    if (!dpd_list[myDPDNum_] == 0) dpd_close(myDPDNum_); // BB add: necessary to close previous DPD instances
     dpd_init(myDPDNum_, nirreps_, memory_, 0, cacheFiles_, cacheList_, nullptr, numSpaces, spaceArray_);
 
     // We have to redefine the MO coefficients for a UHF-like treatment
diff -Naur psi4-1.2.1/psi4/src/psi4/optking/mem.h psi4-1.2.1_changed/psi4/src/psi4/optking/mem.h
--- psi4-1.2.1/psi4/src/psi4/optking/mem.h	2018-07-25 04:11:25.000000000 +0200
+++ psi4-1.2.1_changed/psi4/src/psi4/optking/mem.h	2020-11-18 11:59:18.554887018 +0100
@@ -33,12 +33,14 @@
 #ifndef _opt_mem_h_
 #define _opt_mem_h_
 
+#include "psi4/pragma.h"
+
 namespace opt {
 
 void zero_array(double *A, long int n);
 void zero_int_array(int *A, long int n);
 
-double *init_array(long int m);
+PSI_API double *init_array(long int m);
 void free_array(double *f);
 
 int *init_int_array(int m);
